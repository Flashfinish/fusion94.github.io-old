<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[fusion94]]></title>
  <link href="http://fusion94.org/atom.xml" rel="self"/>
  <link href="http://fusion94.org/"/>
  <updated>2013-11-13T06:56:28-08:00</updated>
  <id>http://fusion94.org/</id>
  <author>
    <name><![CDATA[fusion94]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to enable developer settings on Android 4.2]]></title>
    <link href="http://fusion94.org/blog/2013/02/06/how-to-enable-developer-settings-on-android-4-dot-2/"/>
    <updated>2013-02-06T13:23:00-08:00</updated>
    <id>http://fusion94.org/blog/2013/02/06/how-to-enable-developer-settings-on-android-4-dot-2</id>
    <content type="html"><![CDATA[<p>So for whatever reason Google has chosen to hide the developer settings in the latest version of Jelly Bean. Here&rsquo;s how to get them back.</p>

<p>There&rsquo;s a pretty easy way to re-enable developer setttings and here&rsquo;s how to do it.</p>

<ol>
<li>Go to the settings menu, and scroll down to <code>"About phone."</code> Tap it.</li>
<li>Scroll down to the bottom again, where you see <code>"Build number."</code> (Your build number may vary from ours here.)</li>
<li>Tap it seven (7) times. After the third tap, you&rsquo;ll see a dialog that says you&rsquo;re four taps away from being a developer. Keep on tapping, and eventually, you&rsquo;ve got the developer settings back.</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Custom Character Generator for LCD Panels]]></title>
    <link href="http://fusion94.org/blog/2013/02/01/custom-character-generator-for-lcd-panels/"/>
    <updated>2013-02-01T07:23:00-08:00</updated>
    <id>http://fusion94.org/blog/2013/02/01/custom-character-generator-for-lcd-panels</id>
    <content type="html"><![CDATA[<p>In a blog post coming later today or at the very latest on Monday I&rsquo;ll be writing about displaying content and custom characters on a LCD Panel/LCD Keypad Shield.</p>

<p>As part of that upcoming blog post I&rsquo;m announcing a Custom Character Generator for LCD Panels.</p>

<p>You can play around with it <a href="http://fusion94.org/lcdchargen/">here</a>.</p>

<!-- more -->


<h3>Description</h3>

<p>The LCD Character Generator (LCDCHARGEN) is a custom character generator to use with LCD Panels and/or LCD Shields.</p>

<p>This has been tested to work with the <a href="http://www.dfrobot.com/index.php?route=product/product&amp;product_id=51#.UQvN06HDS0c">LCD Keypad Shield For Arduino</a> by <a href="http://dfrobot.com">DFRobot</a>.</p>

<p>Other 16x2 LCD Panels/Shields should also work.</p>

<h3>Source Code</h3>

<p>This was originally developed by <a href="https://github.com/omerk/lcdchargen">Omerk Kilic</a> but now is powered by my fork located <a href="https://github.com/fusion94/lcdchargen">here</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kandan an Open Source Alternative to HipChat]]></title>
    <link href="http://fusion94.org/blog/2013/01/24/kandan-an-open-source-alternative-to-hipchat/"/>
    <updated>2013-01-24T23:40:00-08:00</updated>
    <id>http://fusion94.org/blog/2013/01/24/kandan-an-open-source-alternative-to-hipchat</id>
    <content type="html"><![CDATA[<div class="info">Say Goodbye to inefficient meetinngs and email threads. Get your team off of AIM, Google Talk, Skype or IRC.</div>


<h3>Introduction</h3>

<p>Today I&rsquo;d like to introduce you to <a href="https://github.com/kandanapp/kandan">Kandan</a> an Open Source alternative to HipChat.</p>

<p>What is Kandan? Kandan is a private chat service for your company or team. You can invite colleagues to share ideas and files in a persistent group chat room or rooms.</p>

<p>Unlike HipChat or other alternatives, Kandan is completely Open Source and can be hosted internally or externally by your organization or by a third party.</p>

<!-- more -->


<h3>Background</h3>

<p>Kandan was originally developed by <a href="http://cloudfuji.com/">Cloudfuji</a> and they started development on it back on March 6th of 2012. Development went pretty fast and furious until about June 4th of 2012. After that there wasn&rsquo;t another commit to the repository until some pull requests came in during the month of January of 2013.</p>

<p>In talking with the team at Cloudfuji both <a href="http://jamesrgifford.com/">James Gifford</a> and I agreed to take over maintenance of the project.</p>

<h3>Features</h3>

<p>These are features that work out of the box on any provider:</p>

<ul>
<li>Easy deploy to CloudFoundry, Heroku, dotCloud, etc.</li>
<li>Collaborative team chat</li>
<li>Unlimited channels</li>
<li>Embed formats for images and youtube videos with requests for others (twitter, facebook, g+, etc.)</li>
<li>Synchronized sound player &ndash; play any audio-tag compatible url for the whole channel (Pending :P)</li>
<li>/me command!</li>
<li>Highly extensible plugin format</li>
</ul>


<h3>Get Involved</h3>

<p>Since Kandan is a fully open-source app, we would appreciate if you dive in and start adding features, fixing bugs (what bugs?), and cleaning up the code.</p>

<p>Make sure you check out these resources as well.</p>

<ul>
<li>GitHub <a href="https://github.com/kandanapp/kandan/issues">Issues Tracker</a></li>
<li>Twitter <a href="https://twitter.com/kandanapp">@kandanapp</a></li>
<li><a href="http://kandanapp.herokuapp.com/">Kandan</a> (Yes we eat our own DogFood)</li>
</ul>


<p>You can also email us at <a href="&#x6d;&#97;&#105;&#x6c;&#116;&#111;&#58;&#x6b;&#x61;&#110;&#100;&#97;&#110;&#x61;&#112;&#112;&#64;&#x67;&#109;&#x61;&#x69;&#x6c;&#x2e;&#99;&#111;&#x6d;">&#107;&#x61;&#110;&#100;&#97;&#x6e;&#x61;&#112;&#112;&#x40;&#103;&#109;&#x61;&#x69;&#108;&#x2e;&#99;&#x6f;&#109;</a></p>

<h3>Conclusion</h3>

<p>We&rsquo;re targetting a 1.0 release in just about two weeks time which will primarily consist of bug fixes. After that release we plan on doing regular minor releases that add new features so if there&rsquo;s anything you want to see in newer versions please create an <a href="https://github.com/kandanapp/kandan/issues">Issue</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CLAHub - CLA's Done Right]]></title>
    <link href="http://fusion94.org/blog/2013/01/16/clahub-clas-done-right/"/>
    <updated>2013-01-16T08:06:00-08:00</updated>
    <id>http://fusion94.org/blog/2013/01/16/clahub-clas-done-right</id>
    <content type="html"><![CDATA[<div class="error">IANAL: The post below is based on my experiences in dealing with Open Source projects from a contributor standpoint and as a benevolent dictator.</div>


<h3>Background</h3>

<p>First of all, what exactly is a Contributor License Agreement (hereafter referred to as <strong>CLA</strong>)?</p>

<p>Most of us that have been employed as Software Engineers by corporations are already intimately familiar with <strong>CLAs</strong> although in the corporate world they are generally called a <em>&ldquo;Intellectual Property Assignment Agreement&rdquo;</em>. In many ways a <strong>CLA</strong> is nothing more than that but specifically geared towards Open Source projects.</p>

<p>A <strong>CLA</strong> is a legal document in which you state you are entitled to contribute the code/documentation/translation to the <strong>project</strong> you&rsquo;re contributing to and are willing to have it used in distributions and derivative works. This means that should there be any kind of legal issue in the future as to the origins and ownership of any particular piece of code, then that <strong>project</strong> has the necessary forms on file from the contributor(s) saying they were permitted to make this contribution.</p>

<!-- more -->


<p>The <strong>CLA</strong> also ensures that once you have provided a contribution, you cannot try to withdraw permission for its use at a later date. People and companies can therefore use that software, confident that they will not be asked to stop using pieces of the code at a later date.</p>

<h3>What Needs To Be In A CLA</h3>

<p>The <strong>CLA</strong> needs to grant rights to a project’s owner (or owning body/organization) that enable the release of the software in question. In the simplest scenario, a <strong>CLA</strong> is not, in fact, used at all; the contributor simply assigns the copyright to the project owner. When done properly, the contributor will need to sign a statement to that effect.</p>

<p>Thus the contributor needs to &ndash; at minimum &ndash; grant the rights that will be granted to the project’s owner in the distribution licence. When granting rights it is common to grant a very broad range of rights. This is in order to avoid the need to return to the contributor for authorization to take a desired action with their contribution, such as releasing under a different licence.</p>

<p>A <strong>CLA</strong> should also contain personal information about the person that signs it, such as a complete name and mailing address. You should be aware of the potential implications that storing this information could have in terms of the data protection law in your country and ensure that you have a Privacy Policy in place to deal with this.</p>

<h3>Recording CLAs</h3>

<p>It is very, very important to record the assignment of copyright or grant of rights for each contribution or from each contributor. This means an Open Source project <strong>must</strong> track and record <strong>CLAs</strong> submitted by contributors. It is generally best to have a <strong>CLA</strong> signed and submitted to project administrators for permanent record prior to the contributor submitting his/her contributions.</p>

<h3>Maintaining CLAs</h3>

<p>Maintaining <strong>CLAs</strong> can be challenging but overall it is not a difficult task. It does increase the effort required to make and accept third-party contributions. Most contributors will start small; i.e., they will provide a simple bug-fix, or a spelling correction. The temptation is there to bypass the requirement of a <strong>CLA</strong> for small contributions.</p>

<p>This begs the the question, <em>&ldquo;Must a <strong>CLA</strong> be in place for every contribution?&rdquo;</em></p>

<p>For small contributions, the risk of loss from legal action can be small. For larger chunks of code/documentation, incorporating major functionality, the risks would be much, much higher.</p>

<p>At the end of the day, it&rsquo;s really up to the project owners and stakeholders on which contributions they chose to accept with and without a <strong>CLA</strong>.</p>

<h3>So who uses a CLA</h3>

<p>So what notable Open Source projects are using a <strong>CLA</strong>? Here are just a few.</p>

<ul>
<li><a href="http://www.canonical.com/contributors">Canonical</a></li>
<li><a href="https://fedoraproject.org/wiki/Legal:Licenses/CLA">Fedora</a></li>
<li><a href="http://source.android.com/source/cla-individual.html">Android</a></li>
<li><a href="http://mono-project.com/FAQ:_Licensing">Mono</a></li>
<li><a href="http://www.apache.org/licenses/icla.txt">Apache</a></li>
<li><a href="http://nodejs.org/cla.html">NodeJS</a></li>
</ul>


<h3>Methods of Recording a CLA</h3>

<p>There are many ways to record and maintain a <strong>CLA</strong>. Some projects require that you print out, complete and sign a document then mail that document back to them. Some projects allow for scanning in a signed agreement then emailing in PDF form to a specific email address while other projects have embraced contributors signing electronically.</p>

<p>Smaller Open Source projects have used electronic signature providers such as:</p>

<ul>
<li><a href="https://www.echosign.adobe.com/en/home.html">Echosign</a></li>
<li><a href="http://www.docusign.com/">DocuSign</a></li>
</ul>


<p>While larger projects have rolled their own online solution.</p>

<ul>
<li><a href="https://forms.canonical.com/contributor/">Canonical</a></li>
<li><a href="http://nodejs.org/cla.html">NodeJS</a></li>
</ul>


<p>You can also use <a href="http://www.harmonyagreements.org/">Harmony Agreements</a> to assist you in selecting the right <strong>CLA</strong> for your Open Source project.</p>

<h3>My experience with CLAs</h3>

<p>For a year, I was the Director of Developer Relations at <a href="http://www.appcelerator.com">Appcelerator</a> and part of my job was to be the default company representative and signer for the <strong>CLA</strong> we had in place. We happened to use <a href="https://www.echosign.adobe.com/en/home.html">Echosign</a> as our electronic signing tool of choice. As I haven&rsquo;t used Echosign (plus they&rsquo;ve been purchased by Adobe since then) in over a year I won&rsquo;t go into details as to whether or not it&rsquo;s any good.</p>

<h4>Appcelerator CLA Workflow</h4>

<p>At Appcelerator a vast majority of our work was Open Source and was hosted in public repositories over on <a href="https://github.com/appcelerator">GitHub</a>. The workflow pretty much operated like this:</p>

<ol>
<li>Fork the project.</li>
<li>Make one or more well commented and clean commits to the forked repository.</li>
<li>Perform a pull request in github&rsquo;s web interface.</li>
<li>Project stakeholder would review the pull request and choose to accept/reject.</li>
<li>If project stakeholder chose to accept, stakeholder would email me to verify if we had a signed <strong>CLA</strong> on file for the contributor.</li>
<li>I&rsquo;d logon to Echosign and verify if there was a <strong>CLA</strong> on file for said contributor.</li>
<li>I&rsquo;d email the project stakeholder and let him/her know if there was or wasn&rsquo;t a <strong>CLA</strong> on file.</li>
<li>Project stakeholder would accept the pull request if we had a <strong>CLA</strong> on file or if we didn&rsquo;t they&rsquo;d reach out to the contributor and get them to sign the <strong>CLA</strong>.</li>
<li>Once the contributor signed the <strong>CLA</strong> we had to go through steps 6-8 all over again.</li>
</ol>


<p>As you can imagine, this was rather inefficient and created quite a bit of friction at times. Which brings me to <a href="https://github.com/jasonm/clahub">CLAHub</a></p>

<h3>CLAHub</h3>

<p>I found about <a href="https://github.com/jasonm/clahub">CLAHub</a> while perusing the <a href="https://github.com/imathis/octopress/wiki/Octopress-Sites">Octopress Sites Wiki</a> and checking out other people&rsquo;s <a href="http://octopress.org">Octopress</a> installs and themes. One of the sites I visited was the website of <a href="http://jayunit.net/">Jason Morrison</a> who is the author of CLAHub.</p>

<p>I read through his <a href="http://jayunit.net/2013/01/09/clahub-easy-contributor-agreements-on-github/">blog post</a> and fell in love with the idea and the concept.</p>

<p><strong>This is how Jason describes it:</strong></p>

<blockquote><p>With CLAHub and an open source project on GitHub you can:</p>

<ul>
<li>Sign in with GitHub and create a CLA for your project.</li>
<li>Ask contributors to sign in with GitHub to electronically sign the CLA.</li>
<li>See on each pull request whether the contributors have all signed your CLA. This uses the handy Commit Status API, similar to what CI tools do.</li>
</ul>
</blockquote>

<p>As a bonus Jason has released it as Open Source under the permissive <a href="https://raw.github.com/jasonm/clahub/master/LICENSE">MIT license</a>.</p>

<p>To find out more about the project then please visit these links:</p>

<ul>
<li><a href="http://www.clahub.com/">CLAHub Site</a></li>
<li><a href="https://github.com/jasonm/clahub">GitHub Code</a></li>
<li><a href="https://github.com/jasonm/clahub/issues">GitHub Issues</a></li>
<li><a href="http://jayunit.net/2013/01/09/clahub-easy-contributor-agreements-on-github/">Jason&rsquo;s Original Blog Post</a></li>
</ul>


<p>One thing to note is that CLAHub currently only works for <strong>public</strong> repositories and <strong>NOT private</strong> repositories.</p>

<h3>Conclusion</h3>

<p>If CLAHub had been available during my time at Appcelerator we definitely would have used it as it removes almost <strong>ALL</strong> of the friction points listed above.</p>

<p>If you&rsquo;re a developer with an Open Source project hosted on GitHub or an organization that&rsquo;s doing the same then you should really take the time to evaluate CLAHub as it just integrates nicely with the existing tools and methods that you are more than likely already using.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Legendary for iOS]]></title>
    <link href="http://fusion94.org/blog/2013/01/15/legendary-for-ios/"/>
    <updated>2013-01-15T06:40:00-08:00</updated>
    <id>http://fusion94.org/blog/2013/01/15/legendary-for-ios</id>
    <content type="html"><![CDATA[<p>Last night I Open Sourced an iOS application called <a href="https://github.com/fusion94/Legendary">Legendary</a>. Legendary displays catchphrases and memorable quotes from the character Barney Stinson from the hit show <em>How I Met Your Mother</em>.</p>

<p>This application was originally developed using the <a href="http://appcelerator.com">Appcelerator Titanium</a> framework and will build for iOS only at the moment but I&rsquo;d love to see it ported over to Android and other mobile platforms.</p>

<p>As an aside this is <strong>only</strong> the mobile client side of the application. There&rsquo;s a server side component as well that will also be open sourced later this week.</p>

<!-- more -->


<p>Below is all the data from the README.md on <a href="http://github.com">GitHub</a></p>

<hr />

<h3>Description</h3>

<p>Legendary displays catchphrases and memorable quotes from the character Barney Stinson.</p>

<p>Browse and discover the only collection of Barney Stinson quotes available on the iPhone!</p>

<p>Who is Barney Stinson?</p>

<ul>
<li>He is a womanizer, favors suits, laser tag, and uses the words &ldquo;awesome&rdquo; and &ldquo;legendary&rdquo; frequently.</li>
<li>Barney is almost always seen wearing a suit and makes great use of his catchphrase, &ldquo;Suit up!&rdquo;, often modifying it for a particular situation (i.e., &ldquo;Snowsuit up!&rdquo; while making an igloo in Central Park, or &ldquo;Flight suit up!&rdquo; when he dresses as a &ldquo;kick a** fighter pilot&rdquo; for Halloween, or &ldquo;Slut Up!&rdquo; when Lily and Robin get ready to go to a high school prom, or when he says &ldquo;Space suit up Ted, &lsquo;cause you&rsquo;re going to the moon,&rdquo; in the episode where Ted may or may not have a threesome).</li>
</ul>


<h3>What&rsquo;s New in Version 1.2</h3>

<ul>
<li>All New 5 Suit Rating System</li>
<li>Quotes are broken down by season</li>
<li>All new popular system</li>
<li>Randomize function</li>
</ul>


<h3>Coming Soon:</h3>

<ul>
<li>Search Functionality</li>
<li>Ability to send to friend</li>
<li>Ability to send to Twitter</li>
<li>Ability to send to Facebook</li>
</ul>


<p>Follow us on Twitter:
<a href="http://twitter.com/legendaryapp">@legendaryapp</a></p>

<p>You can always download a binary in the <a href="https://itunes.apple.com/us/app/legendary/id317444914?mt=8">iTunes Store</a></p>

<h3>Screenshots:</h3>

<p><img src="http://fusion94.org/images/blog/legendary/screenshots/legendary1.jpg">
<img src="http://fusion94.org/images/blog/legendary/screenshots/legendary2.jpg">
<img src="http://fusion94.org/images/blog/legendary/screenshots/legendary3.jpg">
<img src="http://fusion94.org/images/blog/legendary/screenshots/legendary4.jpg">
<img src="http://fusion94.org/images/blog/legendary/screenshots/legendary5.jpg"></p>

<h3>The Details:</h3>

<p>This application was originally developed using the <a href="http://appcelerator.com">Appcelerator Titanium</a> framework and will build for iOS only at the moment.</p>

<h3>Contributing:</h3>

<p>If you care to contribute at all then please see the <a href="https://github.com/fusion94/Legendary/blob/master/CONTRIBUTING.md">CONTRIBUTING File</a> for more details.</p>

<h3>License:</h3>

<p>This application is licensed under the Mozilla Public License Version 2.0. Please see the <a href="https://github.com/fusion94/Legendary/blob/master/LICENSE">LICENSE File</a> for more details.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[InfoBoxes using CSS]]></title>
    <link href="http://fusion94.org/blog/2013/01/13/infoboxes-using-css/"/>
    <updated>2013-01-13T16:22:00-08:00</updated>
    <id>http://fusion94.org/blog/2013/01/13/infoboxes-using-css</id>
    <content type="html"><![CDATA[<p>In my old blog framework I&rsquo;ve used a lot of <code>InfoBoxes</code> that were heavily influenced by a series of Macros provided in <a href="http://www.atlassian.com/software/confluence/">Confluence</a>.</p>

<p>These <code>InfoBoxes</code> were used to display notes, warnings and the like whenever it seemed appropriate. Here are links to the original macros from Confluence.</p>

<ul>
<li><a href="https://confluence.atlassian.com/display/DOC/Info+Macro">Info Macro</a></li>
<li><a href="https://confluence.atlassian.com/display/DOC/Tip+Macro">Tip Macro</a></li>
<li><a href="https://confluence.atlassian.com/display/DOC/Note+Macro">Note Macro</a></li>
<li><a href="https://confluence.atlassian.com/display/DOC/Warning+Macro">Warning Macro</a></li>
</ul>


<!-- more -->


<h4>Old InfoBoxes:</h4>

<p>And here&rsquo;s what the old <code>InfoBoxes</code> looked like:</p>

<div class="oldinfo">This is an example of the Old InfoBox.</div>




<div class="oldsuccess">This is an example of the Old SuccessBox.</div>




<div class="oldwarning">This is an example of the Old WarningBox.</div>




<div class="olderror">This is an example of the Old ErrorBox.</div>


<p>Here&rsquo;s the old CSS that generated these old <code>InfoBoxes</code></p>

<figure class='code'><figcaption><span>CSS for Confluence Style Macro Boxes </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.oldinfo, .oldsuccess, .oldwarning, .olderror {
</span><span class='line'>    border: 1px solid;
</span><span class='line'>    margin: 10px 0px;
</span><span class='line'>    padding:15px 10px 15px 50px;
</span><span class='line'>    background-repeat: no-repeat;
</span><span class='line'>    background-position: 10px center;
</span><span class='line'>    }
</span><span class='line'>    
</span><span class='line'>.oldinfo {
</span><span class='line'>    color: #00529B;
</span><span class='line'>    background-color: #BDE5F8;
</span><span class='line'>    background-image: url('/images/info.png');
</span><span class='line'>    -moz-border-radius: 10px;
</span><span class='line'>  border-radius: 10px;
</span><span class='line'>    }
</span><span class='line'>    
</span><span class='line'>.oldsuccess {
</span><span class='line'>    color: #4F8A10;
</span><span class='line'>    background-color: #DFF2BF;
</span><span class='line'>    background-image:url('/images/success.png');
</span><span class='line'>    -moz-border-radius: 10px;
</span><span class='line'>  border-radius: 10px;    
</span><span class='line'>    }
</span><span class='line'>    
</span><span class='line'>.oldwarning {
</span><span class='line'>    color: #9F6000;
</span><span class='line'>    background-color: #FEEFB3;
</span><span class='line'>    background-image: url('/images/warning.png');
</span><span class='line'>     -moz-border-radius: 10px;
</span><span class='line'>  border-radius: 10px;   
</span><span class='line'>    }
</span><span class='line'>    
</span><span class='line'>.olderror {
</span><span class='line'>    color: #D8000C;
</span><span class='line'>    background-color: #FFBABA;
</span><span class='line'>    background-image: url('/images/error.png');
</span><span class='line'>    -moz-border-radius: 10px;
</span><span class='line'>  border-radius: 10px;    
</span><span class='line'>    }</span></code></pre></td></tr></table></div></figure>


<h4>New InfoBoxes:</h4>

<p>The new <code>InfoBoxes</code> no longer use an image and use pure CSS 3. Here is what they look like:</p>

<p><strong>Style 1</strong></p>

<div class="info">Info: This is an example of the New InfoBox.</div>




<div class="success">Success: This is an example of the New SuccessBox.</div>




<div class="warning">Warning: This is an example of the New WarningBox.</div>




<div class="error">Error: This is an example of the New ErrorBox.</div>


<p><strong>Style 2</strong></p>

<div class="infobox">Info: This is an example of the New InfoBox.</div>




<div class="successbox">Success: This is an example of the New SuccessBox.</div>




<div class="warningbox">Warning: This is an example of the New WarningBox.</div>




<div class="errorbox">Error: This is an example of the New ErrorBox.</div>


<p>And here&rsquo;s the new CSS that generates these new <code>InfoBoxes</code></p>

<figure class='code'><figcaption><span>New InfoBoxes using Pure CSS 3 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.info {
</span><span class='line'>  position:relative;
</span><span class='line'>  padding:15px;
</span><span class='line'>  margin:1em 0 3em;
</span><span class='line'>  color:#fff;
</span><span class='line'>  background:#075698; /* default background for browsers without gradient support */
</span><span class='line'>  /* css3 */
</span><span class='line'>  background:-webkit-gradient(linear, 0 0, 0 100%, from(#2e88c4), to(#075698));
</span><span class='line'>  background:-moz-linear-gradient(#2e88c4, #075698);
</span><span class='line'>  background:-o-linear-gradient(#2e88c4, #075698);
</span><span class='line'>  background:linear-gradient(#2e88c4, #075698);
</span><span class='line'>  -webkit-border-radius:10px;
</span><span class='line'>  -moz-border-radius:10px;
</span><span class='line'>  border-radius:10px;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>.success {
</span><span class='line'>  position:relative;
</span><span class='line'>  padding:15px;
</span><span class='line'>  margin:1em 0 3em;
</span><span class='line'>  color:#fff;
</span><span class='line'>  background:#5a8f00; /* default background for browsers without gradient support */
</span><span class='line'>  /* css3 */
</span><span class='line'>  background:-webkit-gradient(linear, 0 0, 0 100%, from(#b8db29), to(#5a8f00));
</span><span class='line'>  background:-moz-linear-gradient(#b8db29, #5a8f00);
</span><span class='line'>  background:-o-linear-gradient(#b8db29, #5a8f00);
</span><span class='line'>  background:linear-gradient(#b8db29, #5a8f00);
</span><span class='line'>  -webkit-border-radius:10px;
</span><span class='line'>  -moz-border-radius:10px;
</span><span class='line'>  border-radius:10px;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>.warning {
</span><span class='line'>  position:relative;
</span><span class='line'>  padding:15px;
</span><span class='line'>  margin:1em 0 3em;
</span><span class='line'>  color:#fff;
</span><span class='line'>  background:#f3961c; /* default background for browsers without gradient support */
</span><span class='line'>  /* css3 */
</span><span class='line'>  background:-webkit-gradient(linear, 0 0, 0 100%, from(#f9d835), to(#f3961c));
</span><span class='line'>  background:-moz-linear-gradient(#f9d835, #f3961c);
</span><span class='line'>  background:-o-linear-gradient(#f9d835, #f3961c);
</span><span class='line'>  background:linear-gradient(#f9d835, #f3961c);
</span><span class='line'>  -webkit-border-radius:10px;
</span><span class='line'>  -moz-border-radius:10px;
</span><span class='line'>  border-radius:10px;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>.error {
</span><span class='line'>  position:relative;
</span><span class='line'>  padding:15px;
</span><span class='line'>  margin:1em 0 3em;
</span><span class='line'>  color:#fff;
</span><span class='line'>  background:#c81e2b; /* default background for browsers without gradient support */
</span><span class='line'>  /* css3 */
</span><span class='line'>  background:-webkit-gradient(linear, 0 0, 0 100%, from(#f04349), to(#c81e2b));
</span><span class='line'>  background:-moz-linear-gradient(#f04349, #c81e2b);
</span><span class='line'>  background:-o-linear-gradient(#f04349, #c81e2b);
</span><span class='line'>  background:linear-gradient(#f04349, #c81e2b);
</span><span class='line'>  -webkit-border-radius:10px;
</span><span class='line'>  -moz-border-radius:10px;
</span><span class='line'>  border-radius:10px;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>.infobox {
</span><span class='line'>  position:relative;
</span><span class='line'>  padding:15px;
</span><span class='line'>  margin:1em 0 3em;
</span><span class='line'>  color:#fff;
</span><span class='line'>  background:#075698; /* default background for browsers without gradient support */
</span><span class='line'>  /* css3 */
</span><span class='line'>  background:-webkit-gradient(linear, 0 0, 0 100%, from(#2e88c4), to(#075698));
</span><span class='line'>  background:-moz-linear-gradient(#2e88c4, #075698);
</span><span class='line'>  background:-o-linear-gradient(#2e88c4, #075698);
</span><span class='line'>  background:linear-gradient(#2e88c4, #075698);
</span><span class='line'>  -webkit-border-radius:10px;
</span><span class='line'>  -moz-border-radius:10px;
</span><span class='line'>  border-radius:10px;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>.infobox:after {
</span><span class='line'>  content:"";
</span><span class='line'>  position:absolute;
</span><span class='line'>  bottom:-20px; /* value = - border-top-width - border-bottom-width */
</span><span class='line'>  left:50px; /* controls horizontal position */
</span><span class='line'>  border-width:20px 0 0 20px; /* vary these values to change the angle of the vertex */
</span><span class='line'>  border-style:solid;
</span><span class='line'>  border-color:#075698 transparent; 
</span><span class='line'>    /* reduce the damage in FF3.0 */
</span><span class='line'>    display:block; 
</span><span class='line'>    width:0;  
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>.successbox {
</span><span class='line'>  position:relative;
</span><span class='line'>  padding:15px;
</span><span class='line'>  margin:1em 0 3em;
</span><span class='line'>  color:#fff;
</span><span class='line'>  background:#5a8f00; /* default background for browsers without gradient support */
</span><span class='line'>  /* css3 */
</span><span class='line'>  background:-webkit-gradient(linear, 0 0, 0 100%, from(#b8db29), to(#5a8f00));
</span><span class='line'>  background:-moz-linear-gradient(#b8db29, #5a8f00);
</span><span class='line'>  background:-o-linear-gradient(#b8db29, #5a8f00);
</span><span class='line'>  background:linear-gradient(#b8db29, #5a8f00);
</span><span class='line'>  -webkit-border-radius:10px;
</span><span class='line'>  -moz-border-radius:10px;
</span><span class='line'>  border-radius:10px;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>.successbox:after {
</span><span class='line'>  content:"";
</span><span class='line'>  position:absolute;
</span><span class='line'>  bottom:-20px; /* value = - border-top-width - border-bottom-width */
</span><span class='line'>  left:50px; /* controls horizontal position */
</span><span class='line'>  border-width:20px 0 0 20px; /* vary these values to change the angle of the vertex */
</span><span class='line'>  border-style:solid;
</span><span class='line'>  border-color:#5a8f00 transparent; 
</span><span class='line'>    /* reduce the damage in FF3.0 */
</span><span class='line'>    display:block; 
</span><span class='line'>    width:0;  
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>.warningbox {
</span><span class='line'>  position:relative;
</span><span class='line'>  padding:15px;
</span><span class='line'>  margin:1em 0 3em;
</span><span class='line'>  color:#fff;
</span><span class='line'>  background:#f3961c; /* default background for browsers without gradient support */
</span><span class='line'>  /* css3 */
</span><span class='line'>  background:-webkit-gradient(linear, 0 0, 0 100%, from(#f9d835), to(#f3961c));
</span><span class='line'>  background:-moz-linear-gradient(#f9d835, #f3961c);
</span><span class='line'>  background:-o-linear-gradient(#f9d835, #f3961c);
</span><span class='line'>  background:linear-gradient(#f9d835, #f3961c);
</span><span class='line'>  -webkit-border-radius:10px;
</span><span class='line'>  -moz-border-radius:10px;
</span><span class='line'>  border-radius:10px;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>.warningbox:after {
</span><span class='line'>  content:"";
</span><span class='line'>  position:absolute;
</span><span class='line'>  bottom:-20px; /* value = - border-top-width - border-bottom-width */
</span><span class='line'>  left:50px; /* controls horizontal position */
</span><span class='line'>  border-width:20px 0 0 20px; /* vary these values to change the angle of the vertex */
</span><span class='line'>  border-style:solid;
</span><span class='line'>  border-color:#f3961c transparent; 
</span><span class='line'>    /* reduce the damage in FF3.0 */
</span><span class='line'>    display:block; 
</span><span class='line'>    width:0;  
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>.errorbox {
</span><span class='line'>  position:relative;
</span><span class='line'>  padding:15px;
</span><span class='line'>  margin:1em 0 3em;
</span><span class='line'>  color:#fff;
</span><span class='line'>  background:#c81e2b; /* default background for browsers without gradient support */
</span><span class='line'>  /* css3 */
</span><span class='line'>  background:-webkit-gradient(linear, 0 0, 0 100%, from(#f04349), to(#c81e2b));
</span><span class='line'>  background:-moz-linear-gradient(#f04349, #c81e2b);
</span><span class='line'>  background:-o-linear-gradient(#f04349, #c81e2b);
</span><span class='line'>  background:linear-gradient(#f04349, #c81e2b);
</span><span class='line'>  -webkit-border-radius:10px;
</span><span class='line'>  -moz-border-radius:10px;
</span><span class='line'>  border-radius:10px;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>.errorbox:after {
</span><span class='line'>  content:"";
</span><span class='line'>  position:absolute;
</span><span class='line'>  bottom:-20px; /* value = - border-top-width - border-bottom-width */
</span><span class='line'>  left:50px; /* controls horizontal position */
</span><span class='line'>  border-width:20px 0 0 20px; /* vary these values to change the angle of the vertex */
</span><span class='line'>  border-style:solid;
</span><span class='line'>  border-color:#c81e2b transparent; 
</span><span class='line'>    /* reduce the damage in FF3.0 */
</span><span class='line'>    display:block; 
</span><span class='line'>    width:0;  
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>Feel free to use whichever bits you like if you&rsquo;ve found this to be useful.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Firefox OS App Day - Silicon Valley]]></title>
    <link href="http://fusion94.org/blog/2013/01/13/firefox-os-app-day-silicon-valley/"/>
    <updated>2013-01-13T08:32:00-08:00</updated>
    <id>http://fusion94.org/blog/2013/01/13/firefox-os-app-day-silicon-valley</id>
    <content type="html"><![CDATA[<p>If you’re a software developer interested in web technologies then you should really consider participating in <a href="https://wiki.mozilla.org/Engagement/Developer_Engagement/FirefoxAppDays">Firefox OS App Days</a>, a worldwide set of 20+ hack days organized by <a href="http://mozilla.org">Mozilla</a> to help you get started developing apps for the all new and shiny <a href="https://hacks.mozilla.org/2012/11/firefox-os-video-presentations-and-slides-on-the-os-webapis-hacking-and-writing-apps/">Firefox OS</a>.</p>

<p><img class="left" src="http://fusion94.org/images/blog/firefox/firefoxOS-app-days.png"></p>

<p>I&rsquo;ll be attending the <a href="http://firefoxosappday-siliconvalley.eventbrite.com/">Silicon Valley Event</a> on Saturday, January 19, 2013 being held at the Computer History Museum in Mountain View, California.</p>

<p>This should be a really good opportunity to start creating applications for the <a href="https://marketplace.firefox.com/">Firefox Marketplace</a> and the upcoming Firefox OS phone.</p>

<!-- more -->


<p>As the folks from <a href="http://mozilla.org">Mozilla</a> describe it:</p>

<blockquote><p>At each App Day event, you’ll have the opportunity to learn, hack and celebrate Firefox OS, Mozilla’s open source operating system for the mobile web. Technologists and developers from Mozilla will present tools and technology built to extend and support the Web platform, including mobile Web APIs to access device hardware features such as the accelerometer. We’ll also show you how to use the browser-based Firefox OS Simulator to view and test mobile apps on the desktop.</p>

<p>Firefox OS App Days are a chance to kick start creation of apps for the Firefox Marketplace, and represent a great opportunity to build new apps or optimize existing HTML5 apps for Firefox OS, as well as demo your projects to an audience of peers, tech leaders and innovators.</p></blockquote>

<h4>What to bring:</h4>

<p>Bring your Linux, Mac or Windows development machine and device(s). Mozilla will provide everything else.</p>

<h4>What to build:</h4>

<p>The Firefox Marketplace is looking for open web apps that work well on mobile for Firefox OS and Firefox for Android. Mozilla is interested in all kinds of web apps. You can bring an HTML5 app that you’ve started and want to continue, finish, polish, or just present.</p>

<h4>How to get started now (optional):</h4>

<ul>
<li><a href="http://www.mozilla.org/en-US/firefoxos/">Introduction to Firefox OS</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Mozilla/Firefox_OS">Firefox OS Docs</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Apps">Firefox Apps Docs</a></li>
<li><a href="https://marketplace.firefox.com/developers/">Firefox Marketplace Developer Hub</a></li>
<li><a href="https://addons.mozilla.org/en-US/firefox/addon/firefox-os-simulator/">Firefox OS Simulator</a></li>
</ul>


<h4>Schedule:</h4>

<ul>
<li>8:30am &ndash; 9:30am: Registration. Coffee, light breakfast.</li>
<li>9:30am &ndash; 10:00am: Introductory remarks, Lou Schreier, VP, Portfolio Development and Technology Innovation, Deutsche Telekom, Silicon Valley Innovation Center and Rick Fant, VP Apps &amp; Marketplace</li>
<li>10:00am &ndash; 10:30am: Introduction to Firefox OS, Andreas Gal, Director of R &amp; D, Talks by Mozilla, DT, Devs</li>
<li>10:30am &ndash; 11:15am: Building Apps for Firefox Marketplace, Matthew &ldquo;Potch&rdquo; Claypotch, Firefox Marketplace Developer</li>
<li>11:15am &ndash; 11:30am: Design Patterns &amp; Best Practices for Mobile Apps, Maureen Hanratty, Interaction Designer, Firefox Marketplace</li>
<li>12:00 &ndash; 1:00pm: food</li>
<li>1-5pm: app hacking</li>
<li>5:30pm -7pm: Demos &amp; drinks.</li>
</ul>


<p>As I mentioned earlier I will be attending the <a href="http://firefoxosappday-siliconvalley.eventbrite.com/">Silicon Valley Event</a> but unfortunately will have to leave at lunch time as I&rsquo;ll be heading up to Berkeley for the <a href="http://fusion94.org/blog/2013/01/13/openrov-build-day/">OpenROV Build Day Event</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HowTo Tweet New Posts in Octopress]]></title>
    <link href="http://fusion94.org/blog/2013/01/13/howto-tweet-new-posts-in-octopress/"/>
    <updated>2013-01-13T07:10:00-08:00</updated>
    <id>http://fusion94.org/blog/2013/01/13/howto-tweet-new-posts-in-octopress</id>
    <content type="html"><![CDATA[<p>Thanks to a <a href="http://prydoni.us/blog/2012/04/29/tweet-new-posts-in-octopress/">blog post</a> from <a href="http://prydoni.us/blog/">Adnan Abdulhussein</a>, I can now auto-tweet new blog posts on my <a href="http://octopress.org">Octopress</a> blog.</p>

<p>I used his original blog post as a guideline but his method was a bit dated and here&rsquo;s the process I used to get this functionality working.</p>

<!-- more -->


<p>The basic idea works this way, when you create a post it prints the tweet message you give it and a link to the post in a <code>tweet_queue</code> file. When you deploy, it simply reads this file and tweets what’s in there line-by-line. This also means you can create multiple posts at a time, and they will all be tweeted at the same time when you deploy you blog.</p>

<h4>Create an application on Twitter</h4>

<p>Head over to <a href="https://dev.twitter.com/apps/new">https://dev.twitter.com/apps/new</a>, sign in and create a Twitter application for your blog.</p>

<p>In <em>Settings:</em> ensure <em>read</em> and <em>write</em> access is <strong>enabled</strong>.</p>

<p>In <em>Details:</em> take note of the following details:</p>

<ul>
<li>Consumer Key</li>
<li>Consumer Secret</li>
<li>Access Token</li>
<li>Access Token Secret</li>
</ul>


<h4>Install the gem</h4>

<p>We&rsquo;ll be using the Twitter gem to update statues. So first things first, so go ahead and put this in your <code>Gemfile</code> in the development group::</p>

<figure class='code'><figcaption><span>Installing the twitter gem </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem 'twitter'</span></code></pre></td></tr></table></div></figure>


<p>Then from a terminal run <code>bundle install</code> to install the gem.</p>

<h4>Configure Twitter</h4>

<p>Open up your <code>Rakefile</code> and add the following up near the top with the other requires:</p>

<figure class='code'><figcaption><span>Adding Rakefile requires </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>require "twitter"</span></code></pre></td></tr></table></div></figure>


<p>While you have the <code>Rakefile</code> open add the following lines after the <code>server_port</code> line:</p>

<figure class='code'><figcaption><span>Configuring Rakefile for Twitter </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Twitter config (for tweeting posts)
</span><span class='line'>Twitter.configure do |config|
</span><span class='line'>  config.consumer_key = "YOUR_CONSUMER_KEY"
</span><span class='line'>  config.consumer_secret = "YOUR_CONSUMER_SECRET"
</span><span class='line'>  config.oauth_token = "YOUR_OAUTH_TOKEN"
</span><span class='line'>  config.oauth_token_secret = "YOUR_OAUTH_TOKEN_SECRET"
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'># URL of your blog e.g. http://fusion94.org/blog/
</span><span class='line'># MAKE SURE THERE IS A TRAILING SLASH, otherwise the linking won't work
</span><span class='line'>blog_url = "YOUR_BLOG_URL"</span></code></pre></td></tr></table></div></figure>


<p>Replacing <code>YOUR_*</code> with the details from your Twitter app.</p>

<p>Make sure there is a trailing slash (slash at the end of the URL) for the <code>blog_url</code>. It needs this because it appends the date-name combo of the post to form the URL of the post.</p>

<h4>Modify the ‘new_post’ rake task</h4>

<p>Look for the <code>:new_post</code> rake task in the <code>Rakefile</code>. this should be around lines 106 or so. Replace the task with the following:</p>

<figure class='code'><figcaption><span>Configuring new_post rake task </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># usage rake new_post[my-new-post] or rake new_post['my new post'] or rake new_post (defaults to "new-post")
</span><span class='line'>desc "Begin a new post in #{source_dir}/#{posts_dir}"
</span><span class='line'>task :new_post, :title, :tweet do |t, args|
</span><span class='line'>  raise "### You haven't set anything up yet. First run `rake install` to set up an Octopress theme." unless File.directory?(source_dir)
</span><span class='line'>  mkdir_p "#{source_dir}/#{posts_dir}"
</span><span class='line'>  args.with_defaults(:title => 'new-post', :tweet => '')
</span><span class='line'>  title = args.title
</span><span class='line'>  filename = "#{source_dir}/#{posts_dir}/#{Time.now.strftime('%Y-%m-%d')}-#{title.to_url}.#{new_post_ext}"
</span><span class='line'>  if File.exist?(filename)
</span><span class='line'>    abort("rake aborted!") if ask("#{filename} already exists. Do you want to overwrite?", ['y', 'n']) == 'n'
</span><span class='line'>  end
</span><span class='line'>  puts "Creating new post: #{filename}"
</span><span class='line'>  open(filename, 'w') do |post|
</span><span class='line'>    post.puts "---"
</span><span class='line'>    post.puts "layout: post"
</span><span class='line'>    post.puts "title: \"#{title.gsub(/&/,'&amp;')}\""
</span><span class='line'>    post.puts "date: #{Time.now.strftime('%Y-%m-%d %H:%M')}"
</span><span class='line'>    post.puts "comments: true"
</span><span class='line'>    post.puts "categories: "
</span><span class='line'>    post.puts "---"
</span><span class='line'>  end
</span><span class='line'>  tweet = args.tweet
</span><span class='line'>  if not tweet == ''
</span><span class='line'>    # add to twitter status queue
</span><span class='line'>    puts 'Adding post to tweet queue, it will be tweeted after deploying.'
</span><span class='line'>    open('tweet_queue', 'a') do |file|
</span><span class='line'>      file.puts "#{tweet} - #{blog_url}#{Time.now.strftime('%Y/%m/%d')}/#{title.to_url}/"
</span><span class='line'>    end
</span><span class='line'>  end
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<p>If you already have a modified task, the only changes are the task declaration <code>(task :new_post, :title, :tweet do |t, args|)</code> and the last few lines starting with <code>tweet = args.tweet.</code></p>

<h4>Setup tweet on deploy</h4>

<p>Look for the <code>:deploy task</code> in the <code>Rakefile</code> this should be around lines 232 or so. Replace the task with the following:</p>

<figure class='code'><figcaption><span>Confguring deploy to tweet </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>desc "Default deploy task"
</span><span class='line'>task :deploy do
</span><span class='line'>  # Check if preview posts exist, which should not be published
</span><span class='line'>  if File.exists?(".preview-mode")
</span><span class='line'>    puts "## Found posts in preview mode, regenerating files ..."
</span><span class='line'>    File.delete(".preview-mode")
</span><span class='line'>    Rake::Task[:generate].execute
</span><span class='line'>  end
</span><span class='line'>
</span><span class='line'>  Rake::Task[:copydot].invoke(source_dir, public_dir)
</span><span class='line'>  Rake::Task["#{deploy_default}"].execute
</span><span class='line'>
</span><span class='line'>  # Tweet
</span><span class='line'>  next if not File.exists? 'tweet_queue'
</span><span class='line'>  puts "Tweeting..."
</span><span class='line'>  client = Twitter::Client.new
</span><span class='line'>  open('tweet_queue', 'r') do |file|
</span><span class='line'>    while (line = file.gets)
</span><span class='line'>      puts "Tweeting '#{line.gsub("\n", "")}' for @#{client.current_user.screen_name}..."
</span><span class='line'>      Twitter.update line
</span><span class='line'>    end
</span><span class='line'>  end
</span><span class='line'>  puts "Deleting queue..."
</span><span class='line'>  rm 'tweet_queue'
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<p>Or indeed just add the last couple of lines starting with <code># Tweet</code>.</p>

<h4>Usage</h4>

<p>The only change here is you’ll need to specify a separate message for the tweet when you create the post. This is the best way to give you the option of choosing whether you want to tweet the post or not. It also allows you to add @’s and #’s to the tweet message separately from the post title.</p>

<p>Here’s an example:</p>

<p>The first section is the title of the post while the second section is the tweet that will go out along with the URL to the blog post.</p>

<figure class='code'><figcaption><span>rake new_post usage </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake new_post["HowTo Tweet New Posts in Octopress","HowTo Tweet New Posts in Octopress @twitter"]</span></code></pre></td></tr></table></div></figure>


<p>And here&rsquo;s the message generated after the <code>rake new_post</code> task is run.</p>

<figure class='code'><figcaption><span>rake new_post message </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mkdir -p source/_posts
</span><span class='line'>Creating new post: source/_posts/2013-01-13-howto-tweet-new-posts-in-octopress.markdown
</span><span class='line'>Adding post to tweet queue, it will be tweeted after deploying.</span></code></pre></td></tr></table></div></figure>


<p>Now all that&rsquo;s left to do is create your post and then run <code>rake generate &amp;&amp; rake deploy</code>. Your post will be deployed and your tweet will be sent.</p>

<h4>Conclusion</h4>

<p>And that&rsquo;s it. Pretty simple eh? Have fun tweeting and blogging from Octopress.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[This post will be tweeted]]></title>
    <link href="http://fusion94.org/blog/2013/01/13/this-post-will-be-tweeted/"/>
    <updated>2013-01-13T07:03:00-08:00</updated>
    <id>http://fusion94.org/blog/2013/01/13/this-post-will-be-tweeted</id>
    <content type="html"><![CDATA[<p>This is a test of Octopress &amp; Twitter integration. If this works then a longer blog post will follow on how to setup Octopress to tweet new blog posts.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OpenROV Build Day]]></title>
    <link href="http://fusion94.org/blog/2013/01/13/openrov-build-day/"/>
    <updated>2013-01-13T05:46:00-08:00</updated>
    <id>http://fusion94.org/blog/2013/01/13/openrov-build-day</id>
    <content type="html"><![CDATA[<p>We&rsquo;re glad to hear that many of the kits made it under the Christmas tree! Now, the next phase: building them!
<img class="right" src="http://fusion94.org/images/blog/openrov/openrov_icon.jpeg" width="120" height="120">
The <a href="http://wiki.openrov.com">OpenROV Wiki</a> is really starting to fill out: <a href="http://wiki.openrov.com/index.php/Assembly#Step_by_step_instructions">Step by Step Instructions</a></p>

<p>That&rsquo;s the best place to start. The goal is for each section of the build to have:</p>

<!-- more -->


<ol>
<li>Tools/Materials/Parts</li>
<li>Video/Photos/Explanation</li>
<li>Test (to make sure it works and you don&rsquo;t move on until it&rsquo;s functioning correctly)</li>
<li>Troubleshooting</li>
</ol>


<p>The endcap process is a good example of what we are striving for: <a href="http://wiki.openrov.com/index.php/Assembling_and_Gluing_the_end_caps">Endcap Assembly</a></p>

<p>The most important thing to remember: the OpenROV is a work-in-progress. If you have a question, or a doubt, or an idea: SPEAK UP! The only way this project gets better is if it continues to be tweaked and improved by everyone who works on it. If you think you&rsquo;ve got a better way of explaining something &ndash; let&rsquo;s discuss it!</p>

<p>Also, we&rsquo;re planning on hosting build days at our small office in Berkeley. We&rsquo;ll be streaming the build days from our new <a href="https://plus.google.com/u/1/communities/116561282178440599596">OpenROV Community page on G+</a> so anyone around the world can tune in and ask questions (all videos will be archived on Youtube).</p>

<p>The first build day &ndash; the acrylic structure &ndash; will be on Saturday, January 19th starting at 12pm PST.</p>

<p>If you want to join us in-person in Berkeley, please send David Lang an email at: david @ openrov.com</p>

<h4>Details</h4>

<p>Saturday, January 19, 2013 from 12pm to whenever (PST)</p>

<p>OpenROV HQ<br>
614 Bancroft Way &ndash; Suite C<br>
Berkeley CA<br></p>

<p><strong>What to Bring</strong></p>

<ul>
<li>Your OpenROV kits</li>
<li>A Camera</li>
<li>Laptop</li>
<li>Willingness to help</li>
</ul>


<p><strong>What is OpenROV</strong></p>

<p>OpenROV is a  Do It Yourself telerobotics community centered around underwater exploration and education. We have developed a low-cost telerobotic submarine that can be built with mostly off-the-shelf parts. The goal of OpenROV is to democratize exploration by allowing anyone to explore and study underwater environments.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Recent Comments as an Asides]]></title>
    <link href="http://fusion94.org/blog/2013/01/11/recent-comments-as-an-asides/"/>
    <updated>2013-01-11T16:39:00-08:00</updated>
    <id>http://fusion94.org/blog/2013/01/11/recent-comments-as-an-asides</id>
    <content type="html"><![CDATA[<p>This short tutorial will teach you in creating a &ldquo;Recent Comments&rdquo; asides for the Octopress sidebar if you&rsquo;re using Disqus as your commenting system.</p>

<p><strong>Step 1:</strong> Let’s create a new aside. Create a new file named <code>recent_comments.html</code> under <code>source/_includes/custom/asides</code></p>

<!-- more -->


<p><strong>Step 2:</strong> Add the following code</p>

<figure class='code'><figcaption><span>recent_comments.html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;section&gt;</span>
</span><span class='line'>  <span class="nt">&lt;h1&gt;</span>Recent Comments<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>  <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;dsq-recentcomments&quot;</span> <span class="na">class=</span><span class="s">&quot;dsq-widget&quot;</span><span class="nt">&gt;&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;http://disqus.com/forums/fusion94org/recent_comments_widget.js?hide_avatars=1&quot;</span><span class="nt">&gt;&lt;/script&gt;&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;/section&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Here are the parameters you can use for comments :</p>

<ul>
<li>hide_avatars : hides the avatar in comments (values : 0, 1)</li>
<li>num_items : number of comments to show</li>
<li>excerpt_length : number of characters to show for each comment</li>
</ul>


<p><strong>Step 3:</strong> Add the aside to <code>_config.yml</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>default_asides: [custom/asides/links.html, asides/recent_posts.html, custom/asides/recent_comments.html, asides/github.html, asides/twitter.html, asides/delicious.html, asides/pinboard.html, asides/googleplus.html]</span></code></pre></td></tr></table></div></figure>


<p><strong>Step 4:</strong> Rebuild your site</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake generate && rake deploy</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Firearm Ownership in the US]]></title>
    <link href="http://fusion94.org/blog/2013/01/10/firearm-ownership-in-the-us/"/>
    <updated>2013-01-10T11:00:00-08:00</updated>
    <id>http://fusion94.org/blog/2013/01/10/firearm-ownership-in-the-us</id>
    <content type="html"><![CDATA[<div class="error">This post will probably piss people off. From both sides of the equation.</div>


<p>Lately my Facebook and Twitter streams are blowing up on the issues of Firearm Ownership and the 2nd Amendment. Here are my thoughts on the subject.</p>

<blockquote><p>Democracy is two wolves and a lamb voting on what to have for lunch. Liberty is a well-armed lamb contesting the vote. -Benjamin Franklin</p></blockquote>

<p>Let me start by stating a couple of relevant facts about me. These facts are in fact going to influence this blog post. Just as an FYI.
 <!-- more --></p>

<ol>
<li>I spent 10 years in the US Army in either Light Infantry Units or Special Forces Groups.</li>
<li>I am a Combat Veteran.</li>
<li>I spent 3 years as a Police Officer working the housing projects.</li>
<li>I own firearms. To include what some of you would deem as &ldquo;Assault Rifles&rdquo;.</li>
</ol>


<p>In the last couple of months we&rsquo;ve seen more and more &ldquo;spree shootings&rdquo; here in the US. Here is a short list that most people are already familiar with.</p>

<ul>
<li><a href="http://en.wikipedia.org/wiki/Sandy_Hook_Elementary_School_shooting">Sandy Hook Shooting</a></li>
<li><a href="http://en.wikipedia.org/wiki/Aurora,_Colorado_theater_shooting">Aurora Shooting</a></li>
</ul>


<p>The question at hand is whether or not stronger gun laws would have prevented these useless tragedies. In these cases it&rsquo;s probably wouldn&rsquo;t have and here&rsquo;s why.</p>

<hr />

<h3>Sandy Hook Shooting</h3>

<p>In the Sandy Hook Shootings the suspect, Adam Lanza, age 20, fatally shot his mother using her own legally owned firearm. He then left her house armed with at least two semi-automatic handguns and a semi-automatic rifle <em>(all of which she legally owned, not Adam)</em>. He then headed to a local elementary school and killed 26 people.</p>

<p><strong>Gun Laws in Connecticut</strong></p>

<p>Let&rsquo;s review the laws in Connecticut in regards to owning or purchasing a rifle, shotgun or handgun.</p>

<blockquote><p>No state permit is required for the purchase of rifles or shotguns. No sale or delivery of a rifle or shotgun can be made until the expiration of two weeks from the date of application for purchase. The waiting period (14 days) does not apply to law enforcement officers, active duty military personnel, holders of a valid state permit to carry a handgun, holders of a valid hunting license or antique firearms.</p>

<p>It is unlawful to sell or transfer a handgun to any person who is forbidden to possess a firearm under state or federal law, or to a person under 21.</p>

<p>A person must be twenty-one years of age to possess a handgun.</p>

<p>It is unlawful to possess a handgun by a person who has been convicted of a felony; convicted as a delinquent of a serious juvenile offense which includes illegal possession of a controlled substance, negligent homicide, third degree assault, first degree reckless endangerment, second degree unlawful restraint, rioting, or second degree stalking; discharged from custody within the preceding 20 years after acquittal by reason of mental disease or defect; confined by court order for mental illness within the preceding 12 months; subject to a restraining or protective order involving physical force; or an illegal alien. It is unlawful to possess any other firearm by a person who has been convicted of a felony.</p></blockquote>

<p>Adam Lanza did not have any type of criminal record, nor did he suffer from any readily apparent mental disorders. He was however under the age of 21. This would have prevented him from purchasing the two handguns he used in this incident. The problem is that he didn&rsquo;t purchase or attempt to purchase <strong>any</strong> of the firearms used. He took them by force, from his mother, who had purchased these firearms legally. The gun laws in the state of Connecticut <strong>would not have prevented</strong> this tragedy.</p>

<hr />

<h3>Aurora Shooting</h3>

<p>In the Aurora Shootings the suspect, James Holmes, age 24, armed with 2 handguns, one shotgun and a semi-automatic rifle opened fire in a movie theater killing 12 people and injuring another 58.</p>

<p><strong>Gun Laws in Colorado</strong></p>

<p>Let&rsquo;s review the laws in Colorado in regards to owning or purchasing a rifle, shotgun or handgun.</p>

<blockquote><p>There is no state permit required for the purchase of any rifle, shotgun or handgun.</p>

<p>Dealers are required to keep a record on the retail sale, rental, or exchange of  handguns.  The record shall include the name of the person to whom the handgun is transferred, his or her age, occupation, and residence, and the make, caliber, finish and serial number of the handgun, and the date of the transfer and name of employee making the transfer.  The record book shall be open at all times to the inspection of any duly authorized police officer.</p>

<p>Dealers must also perform a background check, in accordance with the national instant criminal background check system, of the prospective buyer, and obtain approval of the transfer from the Colorado Bureau of Investigation</p>

<p>It is unlawful for any person convicted of a felony or conspiracy or attempt to commit a felony, or misdemeanor domestic violence or adjudicated delinquent for a felony to possess a firearm.</p>

<p>It is unlawful for any person under 18 to possess a handgun</p></blockquote>

<p>James Holmes did not have any type of criminal record, nor did he suffer from any readily apparent mental disorders. He purchased all of the firearms used during this incident legally. The gun laws in the state of Colorado <strong>would not have prevented</strong> this tragedy.</p>

<hr />

<h3>Assesment</h3>

<p>Your average spree killer/shooter is unhappy, angry and incapable of fitting into a community and filled with rage that he exercises through violent fantasies.</p>

<p>For most Americans there is no gun culture per se, only the ownership of guns. To the extent that any gun culture exists; it has been in response to a gun control culture that sought to demonize the ownership of firearms. The American gun owner has little in common with your average spree killer/shooter.</p>

<p>To the gun owner, a firearm is a necessary tool. To the average spree killer/shooter, it is a way to stop feeling powerless.</p>

<hr />

<h3>My Take on Firearm Ownership &amp; Regulation</h3>

<blockquote><p>The strongest reason for people to retain the right to keep and bear arms is, as a last resort, to protect themselves against tyranny in government. -Thomas Jefferson</p></blockquote>

<p>I believe in our 2nd Amendment right. Having said that I believe that most states are in fact too lax with how they regulate the sale and transfer of firearms. Here&rsquo;s what I&rsquo;d like to see happen.</p>

<ul>
<li>State permits should be required for the purchase of any rifle, shotgun or handgun.</li>
<li>Minimum age requirement of 18 for rifles and shotguns, and 21 for handguns.</li>
<li>Dealers must perform a background check, in accordance with the national instant criminal background check system, of the prospective buyer and obtain approval from the appropriate state authority.</li>
<li>Dealers must perform a background check of the prosepctive buyer from the appropriate state authority that deals with mental illness.</li>
<li>2 Week waiting period for the purchase of any firearm <strong>UNLESS</strong> the prospective buyer is already a registered firearms owner for that state.</li>
<li>Every owner of a firearm must carry liabilty insurance for every firearm they own.</li>
<li>Every owner of a firearm must take both a written test and a hands on proficiency test for every firearm they own.</li>
<li>Every prospective owner of firearms that can be classified as <em>&ldquo;Assault Rifles&rdquo;</em> has to take a <a href="http://en.wikipedia.org/wiki/Minnesota_Multiphasic_Personality_Inventory">Minnesota Multiphasic Personality Inventory</a> to verify and validate their mental health.</li>
</ul>


<p>Learning the basics of firearms is easy. Handling of guns is governed by four rules which, together, insure that no one would be hurt by accident.</p>

<ol>
<li>All Guns Are Always Loaded</li>
<li>Never Let the Muzzle Cover Anything You Are Not Willing to Destroy</li>
<li>Keep Your Finger off the Trigger Until Your Sights Are on the Target</li>
<li>Be Sure of Your Target</li>
</ol>


<p>A firearm is a tool, it is not a toy. As with any other tools, begin by learning how to operate them safely. Firearms are no different from other mechanical and power tools: if used as intended, they are safe to the users and to bystanders. No one in their right mind would attribute magical powers to a shovel or a drill. Firearms aren&rsquo;t any different.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Titanium Studio Issues]]></title>
    <link href="http://fusion94.org/blog/2013/01/10/titanium-studio-issues/"/>
    <updated>2013-01-10T00:41:00-08:00</updated>
    <id>http://fusion94.org/blog/2013/01/10/titanium-studio-issues</id>
    <content type="html"><![CDATA[<p>I just installed the latest Titanium Studio from Appcelerator and a Titanium Update window pops up when I open TiStudio and asks me to install Titanium CLI and Alloy.</p>

<p>When I press the install button a dialog pops up that says &ldquo;Titanium wants to make changes. Provide your password to allow installation&rdquo;. I enter my password and TiStudio tells me that my password is incorrect and TiStudio asks me to enter it again.</p>

<!-- more -->


<p>This is due in part to the fact that Titanium Studio has no clue how to deal with Node.js packages. Which is fucking ironic considering how much of the new Titanium platform is based on Node.js.</p>

<p>To get around this all you need to do is manually install alloy and titanium cli using this:</p>

<figure class='code'><figcaption><span>Installing Alloy and Titanium CLI </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>npm install -g alloy titanium</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Building B2G (Boot2Gecko) on OSX]]></title>
    <link href="http://fusion94.org/blog/2013/01/09/building-b2g-boot2gecko-on-osx/"/>
    <updated>2013-01-09T10:37:00-08:00</updated>
    <id>http://fusion94.org/blog/2013/01/09/building-b2g-boot2gecko-on-osx</id>
    <content type="html"><![CDATA[<p>So I&rsquo;ve been interested in the <a href="https://wiki.mozilla.org/B2G">Boot2Gecko</a> project for awhile and wanted to see if I could get an app running on <a href="http://www.appgyver.com/steroids">Steroids</a> that would run under B2G.</p>

<p>To accomplish this I needed to get the B2G desktop emulator up and running so I could actually develop something.</p>

<p>Below is the method I had to use to get it up and running with OSX (Mountain Lion).</p>

<!-- more -->


<h2>Prerequisites</h2>

<p>You will need the following installed to get started.</p>

<ul>
<li>Git</li>
<li>Brew</li>
<li>Autoconf</li>
<li>Yasm</li>
</ul>


<p>For this to build properly you&rsquo;re going to have to force <code>brew</code> to download and install <code>autoconf-2.13</code>. This can be accomplished by placing the <code>autoconf.rb</code> code listed below into your Formula folder located at <code>/usr/local/Library/Formula/</code>.</p>

<figure class='code'><figcaption><span>autoconf.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;formula&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Autoconf</span> <span class="o">&lt;</span> <span class="no">Formula</span>
</span><span class='line'>  <span class="n">url</span> <span class="s1">&#39;http://ftp.gnu.org/gnu/autoconf/autoconf-2.13.tar.gz&#39;</span>
</span><span class='line'>  <span class="n">homepage</span> <span class="s1">&#39;http://www.gnu.org/software/autoconf/&#39;</span>
</span><span class='line'>  <span class="n">md5</span> <span class="s1">&#39;9de56d4a161a723228220b0f425dc711&#39;</span><span class="sb">`</span>
</span><span class='line'>
</span><span class='line'><span class="sb">  def install</span>
</span><span class='line'><span class="sb">    system &quot;./configure&quot;, &quot;--program-suffix=213&quot;,</span>
</span><span class='line'><span class="sb">                          &quot;--prefix=</span><span class="si">#{</span><span class="n">prefix</span><span class="si">}</span><span class="sb">&quot;,</span>
</span><span class='line'><span class="sb">                          &quot;--infodir=</span><span class="si">#{</span><span class="n">info</span><span class="si">}</span><span class="sb">&quot;</span>
</span><span class='line'><span class="sb">    system &quot;make install&quot;</span>
</span><span class='line'><span class="sb">  end</span>
</span><span class='line'><span class="sb">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Once this is accomplished just use <code>brew</code> to install both <code>autoconf</code> and <code>yasm</code></p>

<figure class='code'><figcaption><span>Installing prerequisites using brew </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>brew install autoconf
</span><span class='line'>
</span><span class='line'>brew install yasm</span></code></pre></td></tr></table></div></figure>


<h2>Getting the code</h2>

<p>There are two different pieces needed to get the desktop emulator up and running. First there is Mozilla-central. This will contain the b2g executable. The second component needed is gaia. This is the user interface for the b2g phone.</p>

<figure class='code'><figcaption><span>Getting the code </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// Get mozilla-central repo and save it to folder called mozilla-central
</span><span class='line'>git clone https://github.com/mozilla/mozilla-central.git
</span><span class='line'>
</span><span class='line'>// Get gaia repo and save to folder called gaia
</span><span class='line'>git clone https://github.com/mozilla-b2g/gaia.git gaia</span></code></pre></td></tr></table></div></figure>


<h2>Building Mozilla Central</h2>

<p><strong>Create a mozconfig</strong></p>

<p>You will need to create a mozconfig file before building. cd into the mozilla-central directory and create a file called “mozconfig”. Then add the following to it and save.</p>

<figure class='code'><figcaption><span>mozconfig </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mk_add_options MOZ_OBJDIR=../build
</span><span class='line'>mk_add_options MOZ_MAKE_FLAGS="-j9 -s"
</span><span class='line'>
</span><span class='line'>ac_add_options --enable-application=b2g
</span><span class='line'>ac_add_options --disable-libjpeg-turbo
</span><span class='line'> 
</span><span class='line'># This option is required if you want to be able to run Gaia's tests
</span><span class='line'>ac_add_options --enable-tests
</span><span class='line'>
</span><span class='line'># turn on mozTelephony/mozSms interfaces
</span><span class='line'>ac_add_options --enable-b2g-ril</span></code></pre></td></tr></table></div></figure>


<p><strong>Build</strong></p>

<p>While still in the mozilla-central directory build the source code. Now go get a beer or some coffee as this will take a long time.</p>

<figure class='code'><figcaption><span>Building Mozilla Central </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>make -f client.mk build</span></code></pre></td></tr></table></div></figure>


<p>When complete you should see a build folder outside of your mozilla-central directory.</p>

<h2>Building Gaia</h2>

<p>Now that we have mozilla-central working we need to build a profile for gaia. Navigate into the gaia directory that was created when doing a git clone from above. Now we can build with the following command.</p>

<figure class='code'><figcaption><span>Building Gaia </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>make</span></code></pre></td></tr></table></div></figure>


<p>A lot of stuff will happen but if everything works out you should have a “profile” folder in your gaia directory.</p>

<h2>Running the emulator</h2>

<p>To run thhe b2g emulator you&rsquo;re going to need to pass in the profile generated in the gaia folder.</p>

<figure class='code'><figcaption><span>Running the Emulator </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd build/dist/B2G.app/Contents/MacOS/
</span><span class='line'>
</span><span class='line'>./b2g -profile /path/to/gaia/profile</span></code></pre></td></tr></table></div></figure>


<h2>Conclusion</h2>

<p>It really wasn&rsquo;t that hard to get this up and running under OSX. In a future blog post I&rsquo;ll discuss getting a <a href="http://www.appgyver.com/steroids">Steroids</a> application un and running under B2G but for now here are a few screenshots.</p>

<p><strong>B2G Lock Screen</strong></p>

<p><img src="http://fusion94.org/images/blog/b2g-1/b2g_lock_screen.png"></p>

<p><strong>B2G Home Screen</strong></p>

<p><img src="http://fusion94.org/images/blog/b2g-1/b2g_home_screen.png"></p>

<p><strong>B2G Marketplace</strong></p>

<p><img src="http://fusion94.org/images/blog/b2g-1/b2g_marketplace.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress Drafts]]></title>
    <link href="http://fusion94.org/blog/2013/01/07/octopress-drafts/"/>
    <updated>2013-01-07T16:13:00-08:00</updated>
    <id>http://fusion94.org/blog/2013/01/07/octopress-drafts</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve really enjoyed my recent conversion to <a href="http://octopress.org">Octopress</a> but do wish that it by default had a &ldquo;drafts&rdquo; mode so that one can write a post over time. This was really bugging me as I was trying to import old posts from awhile back and the workaround was kind of a pain in the ass.</p>

<!-- more -->


<p>Today of course I located this <a href="http://neverstopbuilding.net/how-to-enhance-your-octopress-draft-and-heroku-deploy-process/">post</a> by <a href="http://neverstopbuilding.net">Jason Fox</a> and used it as a reference.</p>

<h2>Creating a new draft</h2>

<figure class='code'><figcaption><span>Creating new Octopress Draft </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake new_draft["Octopress Drafts"]</span></code></pre></td></tr></table></div></figure>


<p>This tasks does essentially what the <code>new_post</code> task does except it:</p>

<ul>
<li>Puts the file in a _drafts directory.</li>
<li>Eliminates the date from both the file name and the yaml front matter.</li>
<li>Adds published: false to the front matter.</li>
</ul>


<p>Here&rsquo;s the code for the <code>rakefile</code></p>

<figure class='code'><figcaption><span>Creating new Octopress Draft </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># usage rake new_draft["my new draft"]
</span><span class='line'>desc "Begin a new draft in #{source_dir}/#{drafts_dir}"
</span><span class='line'>task :new_draft, :title do |t, args|
</span><span class='line'>  if args.title
</span><span class='line'>    title = args.title
</span><span class='line'>  else
</span><span class='line'>    title = get_stdin("Enter a title for your post: ")
</span><span class='line'>  end
</span><span class='line'>  raise "### You haven't set anything up yet. First run `rake install` to set up an Octopress theme." unless File.directory?(source_dir)
</span><span class='line'>  mkdir_p "#{source_dir}/#{drafts_dir}"
</span><span class='line'>  filename = "#{source_dir}/#{drafts_dir}/#{title.to_url}.#{new_post_ext}"
</span><span class='line'>  if File.exist?(filename)
</span><span class='line'>    abort("rake aborted!") if ask("#{filename} already exists. Do you want to overwrite?", ['y', 'n']) == 'n'
</span><span class='line'>  end
</span><span class='line'>  puts "Creating new draft: #{filename}"
</span><span class='line'>  open(filename, 'w') do |post|
</span><span class='line'>    post.puts "---"
</span><span class='line'>    post.puts "layout: post"
</span><span class='line'>    post.puts "title: \"#{title.gsub(/&/,'&amp;')}\""
</span><span class='line'>    post.puts "comments: true"
</span><span class='line'>    post.puts "published: false"
</span><span class='line'>    post.puts "categories: "
</span><span class='line'>    post.puts "---"
</span><span class='line'>  end
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<h2>Publishing an existing draft</h2>

<figure class='code'><figcaption><span>Publishing an existing Octopress Draft </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake publish_draft</span></code></pre></td></tr></table></div></figure>


<p>This task lists all of the draft posts, prompting you to select one. After you select one it:</p>

<ul>
<li>Adds the current date to the file name and front matter.</li>
<li>Removes the published: false item.</li>
<li>Moves the post to the _posts directory.</li>
</ul>


<p>Here&rsquo;s the code for the <code>rakefile</code></p>

<figure class='code'><figcaption><span>Publishing an existing Octopress Draft </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># usage rake publish_draft
</span><span class='line'>desc "Select a draft to publish from #{source_dir}/#{drafts_dir} on the current date."
</span><span class='line'>task :publish_draft do
</span><span class='line'>  drafts_path = "#{source_dir}/#{drafts_dir}"
</span><span class='line'>  drafts = Dir.glob("#{drafts_path}/*.#{new_post_ext}")
</span><span class='line'>  drafts.each_with_index do |draft, index|
</span><span class='line'>    begin
</span><span class='line'>      content = File.read(draft)
</span><span class='line'>      if content =~ /\A(---\s*\n.*?\n?)^(---\s*$\n?)/m
</span><span class='line'>        data = YAML.load($1)
</span><span class='line'>      end
</span><span class='line'>    rescue => e
</span><span class='line'>      puts "Error reading file #{draft}: #{e.message}"
</span><span class='line'>    rescue SyntaxError => e
</span><span class='line'>      puts "YAML Exception reading #{draft}: #{e.message}"
</span><span class='line'>    end
</span><span class='line'>    puts "  [#{index}]  #{data['title']}"
</span><span class='line'>  end
</span><span class='line'>  puts "Publish which draft? "
</span><span class='line'>  answer = STDIN.gets.chomp
</span><span class='line'>  if /\d+/.match(answer) and not drafts[answer.to_i].nil?
</span><span class='line'>    mkdir_p "#{source_dir}/#{posts_dir}"
</span><span class='line'>    source = drafts[answer.to_i]
</span><span class='line'>    filename = source.gsub(/#{drafts_path}\//, '')
</span><span class='line'>    dest = "#{source_dir}/#{posts_dir}/#{Time.now.strftime('%Y-%m-%d')}-#{filename}"
</span><span class='line'>    puts "Publishing post to: #{dest}"
</span><span class='line'>    File.open(source) { |source_file|
</span><span class='line'>      contents = source_file.read
</span><span class='line'>      contents.gsub!(/^published: false$/, "date: #{Time.now.strftime('%Y-%m-%d %H:%M')}")
</span><span class='line'>      File.open(dest, "w+") { |f| f.write(contents) }
</span><span class='line'>    }
</span><span class='line'>    FileUtils.rm(source)
</span><span class='line'>  else
</span><span class='line'>    puts "Index not found!"
</span><span class='line'>  end
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<p>This way you can compose draft posts at will. Then when you are ready you can publish them and they will appear that you “published” that post on that day.</p>

<p>Here&rsquo;s the full code for the <code>rakefile</code> which you can just put at the bottom.</p>

<figure class='code'><figcaption><span>Creating new Octopress Draft </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># usage rake new_draft["my new draft"]
</span><span class='line'>desc "Begin a new draft in #{source_dir}/#{drafts_dir}"
</span><span class='line'>task :new_draft, :title do |t, args|
</span><span class='line'>  if args.title
</span><span class='line'>    title = args.title
</span><span class='line'>  else
</span><span class='line'>    title = get_stdin("Enter a title for your post: ")
</span><span class='line'>  end
</span><span class='line'>  raise "### You haven't set anything up yet. First run `rake install` to set up an Octopress theme." unless File.directory?(source_dir)
</span><span class='line'>  mkdir_p "#{source_dir}/#{drafts_dir}"
</span><span class='line'>  filename = "#{source_dir}/#{drafts_dir}/#{title.to_url}.#{new_post_ext}"
</span><span class='line'>  if File.exist?(filename)
</span><span class='line'>    abort("rake aborted!") if ask("#{filename} already exists. Do you want to overwrite?", ['y', 'n']) == 'n'
</span><span class='line'>  end
</span><span class='line'>  puts "Creating new draft: #{filename}"
</span><span class='line'>  open(filename, 'w') do |post|
</span><span class='line'>    post.puts "---"
</span><span class='line'>    post.puts "layout: post"
</span><span class='line'>    post.puts "title: \"#{title.gsub(/&/,'&amp;')}\""
</span><span class='line'>    post.puts "comments: true"
</span><span class='line'>    post.puts "published: false"
</span><span class='line'>    post.puts "categories: "
</span><span class='line'>    post.puts "---"
</span><span class='line'>  end
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'># usage rake publish_draft
</span><span class='line'>desc "Select a draft to publish from #{source_dir}/#{drafts_dir} on the current date."
</span><span class='line'>task :publish_draft do
</span><span class='line'>  drafts_path = "#{source_dir}/#{drafts_dir}"
</span><span class='line'>  drafts = Dir.glob("#{drafts_path}/*.#{new_post_ext}")
</span><span class='line'>  drafts.each_with_index do |draft, index|
</span><span class='line'>    begin
</span><span class='line'>      content = File.read(draft)
</span><span class='line'>      if content =~ /\A(---\s*\n.*?\n?)^(---\s*$\n?)/m
</span><span class='line'>        data = YAML.load($1)
</span><span class='line'>      end
</span><span class='line'>    rescue => e
</span><span class='line'>      puts "Error reading file #{draft}: #{e.message}"
</span><span class='line'>    rescue SyntaxError => e
</span><span class='line'>      puts "YAML Exception reading #{draft}: #{e.message}"
</span><span class='line'>    end
</span><span class='line'>    puts "  [#{index}]  #{data['title']}"
</span><span class='line'>  end
</span><span class='line'>  puts "Publish which draft? "
</span><span class='line'>  answer = STDIN.gets.chomp
</span><span class='line'>  if /\d+/.match(answer) and not drafts[answer.to_i].nil?
</span><span class='line'>    mkdir_p "#{source_dir}/#{posts_dir}"
</span><span class='line'>    source = drafts[answer.to_i]
</span><span class='line'>    filename = source.gsub(/#{drafts_path}\//, '')
</span><span class='line'>    dest = "#{source_dir}/#{posts_dir}/#{Time.now.strftime('%Y-%m-%d')}-#{filename}"
</span><span class='line'>    puts "Publishing post to: #{dest}"
</span><span class='line'>    File.open(source) { |source_file|
</span><span class='line'>      contents = source_file.read
</span><span class='line'>      contents.gsub!(/^published: false$/, "date: #{Time.now.strftime('%Y-%m-%d %H:%M')}")
</span><span class='line'>      File.open(dest, "w+") { |f| f.write(contents) }
</span><span class='line'>    }
</span><span class='line'>    FileUtils.rm(source)
</span><span class='line'>  else
</span><span class='line'>    puts "Index not found!"
</span><span class='line'>  end
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bye-Bye Tumblr, Hello Octopress]]></title>
    <link href="http://fusion94.org/blog/2013/01/05/bye-bye-tumblr/"/>
    <updated>2013-01-05T14:27:00-08:00</updated>
    <id>http://fusion94.org/blog/2013/01/05/bye-bye-tumblr</id>
    <content type="html"><![CDATA[<p>This is my first post published using <a href="http://octopress.org">Octopress</a> after several years of using either <a href="http://drupal.org">Drupal</a> and/or <a href="http://tumblr.com">tumblr</a> and I’d like to share the reasons why I chose to move from a blogging platform and switch to a statically generated site.</p>

<p>Yes, because what you are reading is pure static old-school HTML, generated by Octopress on my MacBook Pro. Also to note is that everything here is being served by GitHub through the Pages feature, completely free.</p>

<!-- more -->


<ul>
<li>Octopress sports a clean responsive theme written in semantic HTML5, focused on readability and friendliness toward mobile devices.</li>
<li>Code blogging is easy and beautiful. Embed code (with Solarized styling) in your posts from gists, jsFiddle or from your filesystem.</li>
<li>Third party integration is simple with built-in support for Twitter, Pinboard, Delicious, GitHub Repositories, Disqus Comments and Google Analytics.</li>
<li>It&rsquo;s easy to use. A collection of rake tasks simplifies development and makes deploying a cinch.</li>
<li>Ships with great plug-ins some original and others from the Jekyll community — tested and improved.</li>
</ul>


<h3>Ease of Use</h3>

<p><a href="http://octopress.org">Octopress</a> is a framework built upon <a href="http://github.com/mojombo/jekyll">Jekyll</a>, the Ruby static site generator that powers GitHub Pages.</p>

<p>Jekyll takes a content directory, parses all the articles and pages through a Markdown converter and generates a static website that can be served with almost anything.</p>

<p>Octopress leverages all the power of Jekyll adding a great HTML5 template, mobile ready, and a lot of features like archives, an xml sitemap, code highlighting, external services integration (Twitter, Github, Google+, Facebook), and much much more.</p>

<p>This solution makes your website really fast because there’s no dynamic code that runs on the server and no databases.</p>

<h3>3rd Party Plugins</h3>

<p>Octopress has a wealth of <a href="https://github.com/imathis/octopress/wiki/3rd-party-plugins">3rd Party Plugins</a> that will allow you to do most anything you want to do.</p>

<h3>Themes</h3>

<p>Octopress also has quite a few <a href="https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes">3rd Party Themes</a> for you to use and to customize.</p>

<h3>Open Source</h3>

<p>Best of all is that Octopress is Open Source and licensed under The MIT License.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Arduino + DF-BluetoothV3 Bluetooth module]]></title>
    <link href="http://fusion94.org/blog/2012/12/08/arduino-plus-df-bluetoothv3-bluetooth-module/"/>
    <updated>2012-12-08T13:27:00-08:00</updated>
    <id>http://fusion94.org/blog/2012/12/08/arduino-plus-df-bluetoothv3-bluetooth-module</id>
    <content type="html"><![CDATA[<div class="info">NOTE: This blog post is part of a series of blog posts on how to build electronic circuits. If you’re 
at all interested then please subscribe to the RSS feed.</div>


<h3>Background</h3>

<p>In this blog post we&rsquo;re going to deal with the <a href="http://www.dfrobot.com/index.php?route=product/product&amp;filter_name=TEL0026&amp;product_id=360#.UMODVpPjlnM">DF-BluetoothV3 Bluetooth module</a>
from DFRobot and how to integrate it into an Arduino.</p>

<p>This DF-Bluetooth module offers an affordable way to let your microcontroller talk to your Bluetooth
devices such as Bluetooth mobile phones, laptop, and Bluetooth adapter. The Bluetooth module provides
TTL level UART interface which is supported by almost every microcontroller in the market.</p>

<!-- more -->


<p>It is also designed to be compatible with most popular Arduino controller. Simply plug into Arduino
IO Expansion Shield, and the Bluetooth Arduino is ready to use.</p>

<p><strong>Key Specfications</strong></p>

<ul>
<li>Chips: CSR BC417143</li>
<li>Bluetooth Protocol: Bluetooth Specification v2.0 +EDR</li>
<li>Working Frequency: 2.4-2.48GHz unlicensed ISM Band</li>
<li>Modulation Mode: GFSK (Gaussian Frequency Shift Keying)</li>
<li>Power: ≤4dBm, Class 2</li>
<li>Transmission Distance: 20-30 in free space</li>
<li>Sensitivity: ≤-84 dBm at 0.1% BER</li>
<li>Transmission rate: Asynchronous: 2.1 Mbps (Max)/160 kbps; Synchronous: 1Mbps/1Mbps</li>
<li>Security: Authentication and encryption</li>
<li>Support profiles: Bluetooth serial port</li>
<li>LED indicator: LINK</li>
<li>Power Supply: +3.5V-+8V DC/50 mA</li>
<li>Working Temperature: -20°C-+55°C</li>
<li>Dimension: 43x19.3x11mm</li>
<li>Default serial setting: 9600/N/8/1</li>
<li>Default Pairing Code: 1234</li>
</ul>


<h3>What It Can Do</h3>

<p>DF-BluetoothV3 Bluetooth module uses a unique double-board design, it is beautiful and aims to
prevent electrostatic damage to the module. It is designed to have 2 DC power input, wide voltage
supply (3.5V ~ 8V) and 3.3V power supply, suitable for various applications. STATE LINK is indicated
by a clear and bright LED which is used to display module status and connection status (STATE state:
Search state (high 104ms 342ms 2.9Hz cycle flicker) connection status (high 104ms period 2s 0.5Hz
flashing), LINK state: paired ). It has build-in on-board antenna which provides high quality signals.</p>

<p><img src="http://fusion94.org/images/blog/bluetooth/bt1.png"></p>

<p>DIP switch is designed to set the module status, LED Off to turn off the LINK light to enter power
saving mode, AT Mode allows the module to enter AT command mode, AT commands can modify the baud rate
and the master and slave mode.</p>

<ul>
<li>This module can also be used as a pair which provides a transparent serial data communication.</li>
<li>This module has been tested and compatible with most Bluetooth adapter in the market (Bluetooth dongle, including laptops and mobile phones).</li>
<li>This module has been tested and compatible with Android Phones.</li>
</ul>


<p><strong>Hardware Required</strong></p>

<p>There are two different hardware setups that I&rsquo;ve tested this on.</p>

<p><strong>Setup One</strong></p>

<ul>
<li>DF-BluetoothV3 Bluetooth module</li>
<li>DF-IO Expansion Shield for Arduino (v5)</li>
<li>Arduino Uno</li>
</ul>


<p><img src="http://fusion94.org/images/blog/bluetooth/setup_one.png"></p>

<p><strong>Setup Two</strong></p>

<ul>
<li>DF-BluetoothV3 Bluetooth module</li>
<li>Romeo-All in one Controller (Arduino Compatible Atmega 328) (V1.0)</li>
</ul>


<p><img src="http://fusion94.org/images/blog/bluetooth/setup_two.png"></p>

<div class="warning">Please note that when you use the Romeo-All in one Controller (Arduino Compatible Atmega 328) (V1.0) 
then you&#8217;re going to have to install the <a href="http://www.ftdichip.com/Drivers/VCP.htm">FTDI Drivers</a>.</div>


<h3>Additional Setup Notes</h3>

<div class="info">When the DF-Bluetooth is used on Arduino, please make sure you disconnect the DF-Bluetooth module 
before uploading any code to your Arduino. It won’t burn your Arduino, but the uploading will fail as 
the DF-Bluetooth module occupying the TX/RX pins.</div>


<p>The next step is that making pairs between the computer and the Bluetooth module. By doing this, from
the computer  communicating with a Bluetooth module is now just simple serial communications.</p>

<p>Detail steps depend on the operating system. Followings are from Mac OS X. Choose the Set Up Bluetooth
Devices menu item. Select the Bluetooth_V3 item.</p>

<p><img src="http://fusion94.org/images/blog/bluetooth/bluetooth_setup.jpeg"></p>

<p>The default passcode of the Bluetooth module is ’1234.’ When you are prompted use the passcode.</p>

<p><img src="http://fusion94.org/images/blog/bluetooth/passcode.jpeg"></p>

<p>When the pairing is completed successfully the window below will be shown.</p>

<p><img src="http://fusion94.org/images/blog/bluetooth/pairing_sucess.jpeg"></p>

<p><strong>The Code</strong></p>

<figure class='code'><figcaption><span>DF-BluetoothV3 Bluetooth module code for Arduino </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/*
</span><span class='line'>
</span><span class='line'> DF-BluetoothV3 Bluetooth module
</span><span class='line'> 
</span><span class='line'> Intefaces the DF-BluetoothV3 Bluetooth module with most Arduino contollers.
</span><span class='line'> 
</span><span class='line'> When the DF-Bluetooth is used on Arduino, please make sure you disconnect the 
</span><span class='line'> DF-Bluetooth module before uploading any code to your Arduino. It won’t burn 
</span><span class='line'> your Arduino, but the uploading will fail as the DF-Bluetooth module occupying 
</span><span class='line'> the TX/RX pins.
</span><span class='line'> 
</span><span class='line'> * Copyright (c) 2012 by Tony Guntharp. All Rights Reserved.
</span><span class='line'> * Licensed under the terms of the Apache Public License
</span><span class='line'> * Please see the LICENSE included with this distribution for details.
</span><span class='line'> 
</span><span class='line'> */
</span><span class='line'>
</span><span class='line'>void setup() {
</span><span class='line'>  // Initialize serial communications: Set serial baud rate to 9600
</span><span class='line'>  Serial.begin(9600);          
</span><span class='line'>} 
</span><span class='line'>
</span><span class='line'>void loop() {
</span><span class='line'>  // Print out our Hello World string followed by a newline
</span><span class='line'>  Serial.print("Hello World from the DF-BluetoothV3 Bluetooth module");        
</span><span class='line'>  Serial.println();
</span><span class='line'>  // 1 second delay
</span><span class='line'>  delay(1000);                  
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>At the end of uploading and running the code listed above you will start to see some serial output
like in the image below.</p>

<p><img src="http://fusion94.org/images/blog/bluetooth/bt_results.png"></p>

<p><strong>Source Code</strong></p>

<p><a href="https://github.com/fusion94/DF-BluetoothV3_Arduino">Github</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Arduino + Compass Module 3-Axis HMC5883L]]></title>
    <link href="http://fusion94.org/blog/2012/11/29/arduino-plus-compass-module-3-axis-hmc5883l/"/>
    <updated>2012-11-29T13:14:00-08:00</updated>
    <id>http://fusion94.org/blog/2012/11/29/arduino-plus-compass-module-3-axis-hmc5883l</id>
    <content type="html"><![CDATA[<div class="info">NOTE: This is a post in a series of blog posts on how to build electronic circuits. If you’re at 
all interested then please subscribe to the RSS feed.</div>


<h3>Background</h3>

<p>In this blogpost we&rsquo;re going to deal with the <a href="http://www.parallax.com/tabid/768/ProductID/779/Default.aspx">Compass Module 3-Axis HMC5883L</a> from Parallax and how to
integrate it into an Arduino.</p>

<p>The Compass Module 3-Axis HMC5883L is designed for low-field magnetic sensing with a digital interface.
This compact sensor fits into small projects such as UAVs and robot navigation systems.</p>

<!-- more -->


<p>The sensor converts any magnetic field to a differential voltage output on 3 axes. This voltage shift
is the raw digital output value, which can then be used to calculate headings or sense magnetic fields
coming from different directions. Example code in PBASIC, Spin, and C are provided in the downloads.</p>

<p><strong>Features:</strong></p>

<ul>
<li>Measures Earth’s magnetic fields</li>
<li>3-axis magnetoresistive sensor</li>
<li>Wide magnetic field range (+/-8 gauss)</li>
<li>1 to 2 degree compass heading accuracy</li>
<li>Precision in-axis sensitivity and linearity</li>
<li>I2C digital Interface</li>
<li>Fast 160 Hz maximum output rate</li>
<li>Designed for use with a large variety of microcontrollers with different voltage requirements</li>
</ul>


<p><strong>Application Notes:</strong></p>

<ul>
<li>Auto and personal navigation</li>
<li>UAV systems</li>
<li>Robotic navigation</li>
<li>Location-based services (LBS)</li>
</ul>


<p><strong>Key Specifications:</strong></p>

<ul>
<li>Power Requirements: 2.7 to 6.5 VDC</li>
<li>Communication Interface: I2C (up to 400 kHz)</li>
<li>Operating temperature: -22 to +185 °F (-30 to +85 °C)</li>
<li>Dimensions: 0.725 x 0.650 in (1.8 x 1.7 cm)</li>
</ul>


<h3>What It Can Do</h3>

<ul>
<li>Measures the earth’s magnetic field in three axes, with a 1–2 degree accuracy</li>
<li>Provides individual readings for each axis, which may be used separately or together for 3D calculations</li>
<li>Measures raw strength (gauss) of a nearby magnetic source</li>
</ul>


<p>The 3-Axis Compass module measures magnetic fields in three directions – or axes, labeled X, Y, and Z.
In its most simple form, the module can be used as a basic compass to find earth’s magnetic north.</p>

<p>The compass module can also sense the relative strength of a nearby magnetic source, such as those
caused by magnets or electric fields. As the sensor detects magnetism in three dimensions, it can
determine relative distance and direction to these sources.</p>

<p><img src="http://fusion94.org/images/blog/compass/Compass-2.png"></p>

<p>Compasses are commonly uses with accelerometers, where the data from both the compass and
accelerometer can provide extended information.</p>

<p>One application of adding an accelerometer is to compensate for any tilt of the compass. As with
most any compass, the reading is affected if the compass is not level.</p>

<p><strong>Hardware Required</strong></p>

<ul>
<li>Arduino Board</li>
<li>(1) Compass Module 3-Axis HMC5883L</li>
<li>breadboard</li>
<li>hook-up wire</li>
</ul>


<p><strong>Circuit</strong></p>

<p><img src="http://fusion94.org/images/blog/compass/Compass-3.png"></p>

<p>Connect the 5V and GND pins of the compass to the power and ground ports on the Arduino. Connect
analog pin 4 of the Arduino to the SDA (Data) out pin of the compass, and analog pin 5 to the SCL
(Clock) out pin.</p>

<p>The picture below shows you essentially how the circuit should be laid out.</p>

<p><img src="http://fusion94.org/images/blog/compass/Compass-6_0.png"></p>

<p>Don’t forget that your Arduino must be connected to your computer in order for it to transmit serial
data and don’t forget to set the Baud Rate of your serial connection to be 9600.</p>

<p><strong>The Code</strong></p>

<figure class='code'><figcaption><span>Compass Module 3-Axis HMC5883L code for Arduino </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/*
</span><span class='line'>   Compass Module 3-Axis HMC5883L
</span><span class='line'>   
</span><span class='line'>   Read the Compass Module 3-Axis HMC5883L and prints them over the serial connection to the computer.
</span><span class='line'>   
</span><span class='line'>   The circuit:
</span><span class='line'>    * SDA (Data) output of compass to analog pin 4
</span><span class='line'>    * SCL (Clock) output of compass to analog pin 5
</span><span class='line'>    * +V of accelerometer to +5V
</span><span class='line'>    * GND of accelerometer to ground
</span><span class='line'>
</span><span class='line'>   created 29 Nov 2012
</span><span class='line'>   by Tony Guntharp
</span><span class='line'>
</span><span class='line'> */
</span><span class='line'>#include 
</span><span class='line'>
</span><span class='line'>#define Addr 0x1E               // 7-bit address of HMC5883 compass
</span><span class='line'>
</span><span class='line'>void setup() {
</span><span class='line'>  Serial.begin(9600);
</span><span class='line'>  delay(100);                   // Power up delay
</span><span class='line'>  Wire.begin();
</span><span class='line'>  
</span><span class='line'>  // Set operating mode to continuous
</span><span class='line'>  Wire.beginTransmission(Addr); 
</span><span class='line'>  Wire.write(byte(0x02));
</span><span class='line'>  Wire.write(byte(0x00));
</span><span class='line'>  Wire.endTransmission();
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>void loop() {
</span><span class='line'>  int x, y, z;
</span><span class='line'>
</span><span class='line'>  // Initiate communications with compass
</span><span class='line'>  Wire.beginTransmission(Addr);
</span><span class='line'>  Wire.write(byte(0x03));       // Send request to X MSB register
</span><span class='line'>  Wire.endTransmission();
</span><span class='line'>
</span><span class='line'>  Wire.requestFrom(Addr, 6);    // Request 6 bytes; 2 bytes per axis
</span><span class='line'>  if(Wire.available() &lt;=6) {    // If 6 bytes available
</span><span class='line'>    x = Wire.read() &lt;&lt; 8 | Wire.read();
</span><span class='line'>    z = Wire.read() &lt;&lt; 8 | Wire.read();
</span><span class='line'>    y = Wire.read() &lt;&lt; 8 | Wire.read();
</span><span class='line'>  }
</span><span class='line'>  
</span><span class='line'>  // Print raw values
</span><span class='line'>  Serial.print("X=");
</span><span class='line'>  Serial.print(x);
</span><span class='line'>  Serial.print(", Y=");
</span><span class='line'>  Serial.print(y);
</span><span class='line'>  Serial.print(", Z=");
</span><span class='line'>  Serial.println(z);
</span><span class='line'>  
</span><span class='line'>  delay(500);
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>At the end of uploading and running the code listed above you will start to see some serial output
like in the image below.</p>

<p><img src="http://fusion94.org/images/blog/compass/compass_results.png"></p>

<p>Here’s a picture of the actual circuit built.</p>

<p><img src="http://fusion94.org/images/blog/compass/compass_circuit.png"></p>

<p><strong>Source Code</strong></p>

<p><a href="https://github.com/fusion94/HMC5883L_Arduino">Github</a></p>

<p>In a follow up blog post I’ll discuss how you can use both the Compass Module 3-Axis HMC5883L in
conjunction with the Memsic 2125 Dual-axis Accelerometer to compensate for any tilt of the compass.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Arduino + Memsic 2125 Dual-axis Accelerometer]]></title>
    <link href="http://fusion94.org/blog/2012/11/28/arduino-plus-memsic-2125-dual-axis-accelerometer/"/>
    <updated>2012-11-28T15:50:00-08:00</updated>
    <id>http://fusion94.org/blog/2012/11/28/arduino-plus-memsic-2125-dual-axis-accelerometer</id>
    <content type="html"><![CDATA[<div class="info">NOTE: This is a post in a series of blog posts on how to build electronic circuits. If you’re at 
all interested then please subscribe to the RSS feed.</div>


<h3>Background</h3>

<p>In this blogpost we&rsquo;re going to deal with the <a href="http://learn.parallax.com/KickStart/28017">Memsic 2125 Dual-axis Accelerometer</a> from Parallax and how to integrate
it into an Arduino.</p>

<p>The Memsic 2125 is a low cost, dual-axis thermal accelerometer capable of measuring tilt, acceleration, rotation,
and vibration with a range of ±3 g. For integration into existing applications, the Memsic 2125 is electrically
compatible with other popular accelerometers.</p>

<!-- more -->


<p>Memsic provides the 2125 in a surface-mount format. Parallax mounts the circuit on a through-hole providing all
I/O connections so it can easily be inserted on a breadboard or through-hole prototype area.</p>

<p><strong>Features:</strong></p>

<ul>
<li>Measures ±3 g on each axis</li>
<li>Simple pulse output of g-force for each axis</li>
<li>Convenient 6-pin 0.1&#8221; spacing DIP module</li>
<li>Analog output fo temperature (Tout pin)</li>
<li>Low current at 3.3 or 5 V operation: less than 4 mA at 5 VDC</li>
</ul>


<p><strong>Sample Applications:</strong></p>

<ul>
<li>Dual-axis tilt sensing for autonomous robotics applications</li>
<li>Single-axis rotational position sensing</li>
<li>Movement/Lack-of-movement sensing for alarm systems</li>
<li>R/C hobby projects such as autopilots</li>
</ul>


<p><strong>Key Specifications:</strong></p>

<ul>
<li>Power requirements: +3.3 to +5 VDC</li>
<li>Communication: TTL/CMOS compatible 100 Hz PWM output signal with duty cycle proportional to acceleration</li>
<li>Dimensions: 0.42 x 0.42 x 0.45 in (10.7 x 10.7 x 11.8 mm)</li>
<li>Operating temp range: 32 to +158 °F (0 to +70 °C)</li>
</ul>


<h3>What It Can Do</h3>

<ul>
<li>Measures tilt in two axes: forward and back, or side to side</li>
<li>Registers sudden changes in motion
*Detects even small amounts of vibration and motion</li>
</ul>


<p>The Memsic 2125 Dual-axis Accelerometer is sensitive to the gravitational pull of the earth, allowing it to measure
tilt, vibration, motion, and acceleration. The sensor provides independent outputs for two axes, labeled X and Y:</p>

<ul>
<li>The X axis measures tilt or acceleration forward and back (direction of arrow)</li>
<li>The Y axis measures tilt or acceleration side to side</li>
</ul>


<p><img src="http://fusion94.org/images/blog/memsic2125/Memsic2125-2.png"></p>

<p>The Memsic 2125 module registers the constant pull of earth’s gravity. This is specified as 1g (g for gravity). For
the Memsic sensor, the value of 1g is always some positive number, and is about half way between the highest and
lowest readings the module is capable of reporting.</p>

<p>As a tilt sensor, the Memsic 2125 detects when the module is not level. The output of the sensor indicates the amount
of inclination. As a acceleration or vibration sensor, the sensor measures the g-forces acting on it. The greater the
g-force, the higher the acceleration or vibration.</p>

<p>The X and Y axis output of the Memsic 2125 is a pulse that has a period of (that is, it repeats) 100 times a second
(100 Hz). The width of the pulse represents the instantaneous g-force. By measuring the width of the pulse, you can
derive – with high accuracy – the g-force of either axis.</p>

<p><img src="http://fusion94.org/images/blog/memsic2125/Memsic2125-3.png"></p>

<p><strong>Hardware Required</strong></p>

<ul>
<li>Arduino Board</li>
<li>(1) Memsic 2125 Accelerometer</li>
<li>breadboard</li>
<li>hook-up wire</li>
</ul>


<p><strong>Circuit</strong></p>

<p><img src="http://fusion94.org/images/blog/memsic2125/Mx2125_PINOUT.png"></p>

<p>Use the small triangle on the Memsic to properly orient the sensor on your breadboard. Connect the 5V and GND pins
of the Memsic 2125 to the power and ground ports on the Arduino. Connect digital pin 2 of the Arduino to the X out
pin of the accelerometer, and digital pin 3 to the Y out pin.</p>

<p>The picture below shows you essentially how the circuit should be laid out.</p>

<p><img src="http://fusion94.org/images/blog/memsic2125/Memsic2125-7.png"></p>

<p>Don&rsquo;t forget that your Arduino must be connected to your computer in order for it to transmit serial data and
don&rsquo;t forget to set the Baud Rate of your serial connection to be 9600.</p>

<p><strong>The Code</strong></p>

<figure class='code'><figcaption><span>Memsic 2125 two-axis accelerometer code for Arduino </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/*
</span><span class='line'>   Memsic2125
</span><span class='line'>   
</span><span class='line'>   Read the Memsic 2125 two-axis accelerometer and prints them over the serial connection to the
</span><span class='line'>   computer.
</span><span class='line'>   
</span><span class='line'>   The circuit:
</span><span class='line'>    * X output of accelerometer to digital pin 2
</span><span class='line'>    * Y output of accelerometer to digital pin 3
</span><span class='line'>    * +V of accelerometer to +5V
</span><span class='line'>    * GND of accelerometer to ground
</span><span class='line'>
</span><span class='line'>    * Copyright (c) 2012 by Tony Guntharp. All Rights Reserved.
</span><span class='line'>    * Licensed under the terms of the Apache Public License
</span><span class='line'>    * Please see the LICENSE included with this distribution for details.
</span><span class='line'>
</span><span class='line'> */
</span><span class='line'> 
</span><span class='line'> // these constants won't change:
</span><span class='line'>const int xPin = 2;     // X output of the accelerometer
</span><span class='line'>const int yPin = 3;     // Y output of the accelerometer
</span><span class='line'>
</span><span class='line'>void setup() {
</span><span class='line'>  // initialize serial communications:
</span><span class='line'>  Serial.begin(9600);
</span><span class='line'>  // initialize the pins connected to the accelerometer
</span><span class='line'>  // as inputs:
</span><span class='line'>  pinMode(xPin, INPUT);
</span><span class='line'>  pinMode(yPin, INPUT);
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>void loop() {
</span><span class='line'>  // variables to read the pulse widths:
</span><span class='line'>  int pulseX, pulseY;
</span><span class='line'>  // variables to contain the resulting accelerations
</span><span class='line'>  int accelerationX, accelerationY;
</span><span class='line'>  
</span><span class='line'>  // read pulse from x- and y-axes:
</span><span class='line'>  pulseX = pulseIn(xPin,HIGH);  
</span><span class='line'>  pulseY = pulseIn(yPin,HIGH);
</span><span class='line'>  
</span><span class='line'>  // convert the pulse width into acceleration
</span><span class='line'>  // accelerationX and accelerationY are in milli-g's: 
</span><span class='line'>  // earth's gravity is 1000 milli-g's, or 1g.
</span><span class='line'>  accelerationX = ((pulseX / 10) - 500) * 8;
</span><span class='line'>  accelerationY = ((pulseY / 10) - 500) * 8;
</span><span class='line'>
</span><span class='line'>  // print the acceleration
</span><span class='line'>  Serial.print(accelerationX);
</span><span class='line'>  // print a tab character:
</span><span class='line'>  Serial.print("\t");
</span><span class='line'>  Serial.print(accelerationY);
</span><span class='line'>  Serial.println();
</span><span class='line'>
</span><span class='line'>  delay(100);
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>At the end of uploading and running the code listed above you will start to see some serial output like in the
image below.</p>

<p><img src="http://fusion94.org/images/blog/memsic2125/memsic2125_results.png"></p>

<p>Here&rsquo;s a picture of the actual circuit built.</p>

<p><img src="http://fusion94.org/images/blog/memsic2125/layout.png"></p>

<p>In a follow up blog post I&rsquo;ll discuss how by using additional math, you can use the values provided by the
accelerometer to convert to actual g-forces or degrees of tilt.</p>

<p><strong>Source Code</strong></p>

<p><a href="https://github.com/fusion94/Memsic2125_Arduino">Github</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Open Source Hardware]]></title>
    <link href="http://fusion94.org/blog/2012/11/28/open-source-hardware/"/>
    <updated>2012-11-28T08:34:00-08:00</updated>
    <id>http://fusion94.org/blog/2012/11/28/open-source-hardware</id>
    <content type="html"><![CDATA[<p>Open-source hardware (OSHW) consists of physical artifacts of technology designed and offered
in the same manner as free and open-source software (FOSS). Open-source hardware is part of
the open-source culture movement and applies a like concept to a variety of components. The
term usually means that information about the hardware is easily discerned. Hardware design
(i.e. mechanical drawings, schematics, bill of materials, PCB layout data, HDL source code
and integrated circuit layout data), in addition to the software that drives the hardware,
are all released with the FOSS approach.</p>
]]></content>
  </entry>
  
</feed>
